 abort ( const * void memcpy ) ( * ) ( ) ; ( char * ) int strcmp ( char char ) memset ( , size_t ) #define ( ) memset ( , ) ; ( ( FILLER ) ) "chk.h" s1 [ ] "123" ; char = s5 ; ( ( noinline ) ) test1 ( ) { * const "hello world" * [ 64 ] d2 strcat_disallowed ( ( ( , ) strcmp ( dst ) ) ( ) ( ( dst x2 ( ) abort ( ; d2 ; ( ( ) ) ; RESET_DST_WITH ) d2 if ( ( ) ) ( ) ( ( x1+11 ) dst+1 , ) ) if ( ) x1 ) ( dst , " 1111" ) ( "hello 1111\0XXX" ) RESET_DST_WITH ( , " 2222" ) , "hello 2222\0XXX" ) ( ) ( ) ( " 3333" != d2 memcmp ( "hello 3333\0XXX" ) ( ) ; strcat ( strcat ( strcat ( ( strcat , ": " ) , "is " ) "a " ) ( , "hello test.\0X" 30 ) ) ( ) = ( x1 ) "" || strcmp ) ( ) ( ) } test2 ( ) { { [ ] char [ ] } char = & [ ] ( ( ) ) ( char ) __volatile ( ( ) : ) ( ) ( r & a.buf2 [ ] ( 3 ) ( ) ) ( + ) ( r ) ( i < ) { ( 1 ) & [ ] ( i ) [ 7 ] ; else ( 1 ) & [ 5 ] ; ( ) = [ ] } ( + 4 ) ( ) ( ) ( & a , ( ) ( ) ( ) ; ) ( ) __builtin_alloca ( ) [ ] ( '\0' ) ( "" ( ) ) ( ) ( chk_calls ) 0 ( , s3 ) ( ) abort ( ) } ( ) { { [ ] [ ] } char [ ] ( sizeof ( a ) ) memset ( buf3 ( ) ) ( * ) ( ) ( ( s5 ) ( __builtin_setjmp ( chk_fail_buf ) == { ( & a.buf2 [ 9 ] ) ; } if ( chk_fail_buf ) 0 ) { ( & [ ] ( ) ) ( ) } ( ) ) { ( [ 19 ] ) } } ( ) { __OPTIMIZE__ ( ( ) ( "" "=r" ( ) ) ; __asm ( ) ( ) ) ( ) ; ( , ( ) ) ( ) }

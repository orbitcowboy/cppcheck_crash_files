template <typename T, class D = Disposer<T>>
class UsefulShim : public Useful
{
    operator const_ptr_type() {
        return const_ptr_type(const_cast<const T*>(static_cast<T*>(this)));
    }
};

class Foo : public UsefulShim<Foo>
{
};

/*backtrace:
#0  0xb7fdbc7c in __kernel_vsyscall ()
No symbol table info available.
#1  0xb7c6c577 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56
        resultvar = <optimized out>
        resultvar = <optimized out>
        pid = -1210155008
        selftid = 4719
#2  0xb7c6dcf3 in __GI_abort () at abort.c:89
        save_stage = 2
        act = {__sigaction_handler = {sa_handler = 0xb7fff000, sa_sigaction = 0xb7fff000}, sa_mask = {__val = {3086855192, 1, 3221215936, 3087003648, 3086855192, 1, 3221215952, 3086926129, 3086855632, 3082945056, 1, 1, 0, 3086205956, 3085326552, 3085291304, 3221215924, 3086204956, 3085326552, 3085265656, 3086002596, 78, 3086002575, 3083092248, 3221216196, 2559386624, 3221216168, 3086204928, 3221216196, 1, 3221216168, 3086951600}}, sa_flags = 1, sa_restorer = 0xb7c6dbb0 <__GI_abort>}
        sigs = {__val = {32, 0 <repeats 31 times>}}
#3  0xb7ef510d in __gnu_debug::_Error_formatter::_M_error() const () from /usr/lib/i386-linux-gnu/libstdc++.so.6
No symbol table info available.
#4  0x08485436 in std::stack<std::__debug::map<std::string, unsigned int, std::less<std::string>, std::allocator<std::pair<std::string const, unsigned int> > >, std::__debug::deque<std::__debug::map<std::string, unsigned int, std::less<std::string>, std::allocator<std::pair<std::string const, unsigned int> > >, std::allocator<std::__debug::map<std::string, unsigned int, std::less<std::string>, std::allocator<std::pair<std::string const, unsigned int> > > > > >::top (this=0xbfffdf38) at /usr/include/c++/4.9/bits/stl_stack.h:164
No locals.
#5  0x0845a79c in Tokenizer::setVarId (this=0xbfffe238) at lib/tokenize.cpp:2580
        newScope = false
        tok = 0x85bb668
        notstart = std::__debug::set with 16 elements = {[0] = "NOT", [1] = "const_cast", [2] = "delete", [3] = "dynamic_cast", [4] = "explicit", [5] = "friend", [6] = "goto", [7] = "new", [8] = "reinterpret_cast", [9] = "return", [10] = "sizeof", [11] = "static_cast", [12] = "throw", [13] = "typedef", [14] = "using", [15] = "virtual"}
        executableScope = std::stack wrapping: std::__debug::deque with 1 elements = {false}
        allMemberVars = std::__debug::list = {[0] = 0x0, [1] = <error reading variable allMemberVars (Cannot access memory at address 0x8)>
        scopestartvarid = std::stack wrapping: std::__debug::deque with 1 elements = {0}
        initListEndToken = 0x0
        variableId = std::__debug::map with 0 elements
        structMembers = std::__debug::map with 0 elements
        scopeInfo = std::stack wrapping: std::__debug::deque with 0 elements
        allMemberFunctions = std::__debug::list<error reading variable: Cannot access memory at address 0x4>
        varlist = std::__debug::map with 140230188 elements<error reading variable: Cannot access memory at address 0xa4000007>
#6  0x084604c0 in Tokenizer::simplifyTokenList1 (this=0xbfffe238, FileName=0x85b5f64 "crash228.cpp") at lib/tokenize.cpp:3599
No locals.
#7  0x08455757 in Tokenizer::tokenize (this=0xbfffe238, code=..., FileName=0x85b5f64 "crash228.cpp", configuration="", noSymbolDB_AST=false) at lib/tokenize.cpp:1626
        __PRETTY_FUNCTION__ = "bool Tokenizer::tokenize(std::istream&, const char*, const string&, bool)"
#8  0x083a8aa4 in CppCheck::checkFile (this=0xbfffea14, code="template <typename T, class D = Disposer<T>>\nclass UsefulShim : public Useful\n{\noperator const_ptr_type() {\nreturn const_ptr_type(const_cast<const T*>(static_cast<T*>(this)));\n}\n};\n\nclass Foo : public"..., FileName=0x85b5f64 "crash228.cpp", checksums=std::__debug::set with 0 elements) at lib/cppcheck.cpp:327
        istr = <incomplete type>
        timer = {_str = "Tokenizer::tokenize", _timerResults = 0x85af2e0 <S_timerResults>, _start = 0, _showtimeMode = 0, _stopped = false}
        result = 191
        timer3 = {_str = "@\305[\bX\204\336\267\020\000\000\000\030\000\000\000\006\000\000\000\006\000\000\000\377\377\377\377public\000\000!\000\000\000\000\000\000\000(\204[\b\000\000\000\000\000\000\000\000\274\203[\b\004\000\000\000sefu!\000\000\000\001\000\000\000\220\201[\b\350\202[\b\b\204[\b‘É[\b\b\000\000\000ator\031\000\000\000\a\000\000\000\a\000\000\000\000\000\000\000wchar_t\000!\000\000\000\001\000\000\000@\203[\b\230\204[\b\000\000\000\000T\204[\b\004\000\000\000<con\031\000\000\000\006\000\000\000\006\000\000\000\000\000\000\000size_t\000t!\000\000\000\000\000\000\000`\204[\b\000\000\000\000\000\000\000\000"..., _timerResults = 0x8, _start = 140215304, _showtimeMode = 140215304, _stopped = 8}
        _tokenizer = {list = {_front = 0x85b8b40, _back = 0x85bcaf8, _files = std::__debug::vector of length 1, capacity 1 = {"crash228.cpp"}, _settings = 0xbfffea2c, _isC = false, _isCPP = true}, _settings = 0xbfffea2c, _errorLogger = 0xbfffea14, _symbolDatabase = 0x0, _configuration = "", _typeSize = std::__debug::map with 12 elements = {["*"] = 4, ["bool"] = 1, ["char"] = 1, ["char16_t"] = 2, ["char32_t"] = 4, ["double"] = 8, ["float"] = 4, ["int"] = 4, ["long"] = 4, ["short"] = 2, ["size_t"] = 4, ["wchar_t"] = 4}, _varId = 0, _codeWithTemplates = true, m_timerResults = 0x0}
#9  0x083a7880 in CppCheck::processFile (this=0xbfffea14, filename="crash228.cpp", fileStream=...) at lib/cppcheck.cpp:237
        t = {_str = "Preprocessor::getcode", _timerResults = 0x85af2e0 <S_timerResults>, _start = 0, _showtimeMode = 0, _stopped = true}
        codeWithoutCfg = "template <typename T, class D = Disposer<T>>\nclass UsefulShim : public Useful\n{\noperator const_ptr_type() {\nreturn const_ptr_type(const_cast<const T*>(static_cast<T*>(this)));\n}\n};\n\nclass Foo : public"...
        it = ""
        filedata = "template <typename T, class D = Disposer<T>>\nclass UsefulShim : public Useful\n{\noperator const_ptr_type() {\nreturn const_ptr_type(const_cast<const T*>(static_cast<T*>(this)));\n}\n};\n\nclass Foo : public"...
        preprocessor = {static macroChar = 1 '\001', static missingIncludeFlag = false, static missingSystemIncludeFlag = false, _settings = 0xbfffea2c, _errorLogger = 0xbfffea14, file0 = "crash228.cpp"}
        configurations = std::__debug::list = {[0] = ""}
        checksums = std::__debug::set with 0 elements
        checkCount = 1
#10 0x083a6474 in CppCheck::check (this=0xbfffea14, path="crash228.cpp") at lib/cppcheck.cpp:70
        fin = <incomplete type>
#11 0x082aef1e in CppCheckExecutor::check_internal (this=0xbfffefa8, cppcheck=..., argv=0xbffff0b4) at cli/cppcheckexecutor.cpp:774
        i = {first = "crash228.cpp", second = 238}
        totalfilesize = 238
        processedsize = 0
        c = 0
        std = true
        posix = true
        windows = true
        returnValue = 0
        settings = @0xbfffea2c: {_append = "", _enabled = std::__debug::set with 0 elements, _terminate = false, debug = false, debugwarnings = false, debugFalsePositive = false, dump = false, exceptionHandling = false, inconclusive = false, experimental = false, _errorsOnly = false, _inlineSuppressions = false, _verbose = false, _force = false, _relativePaths = false, _basePaths = std::__debug::vector of length 0, capacity 0, _xml = false, _xml_version = 1, _jobs = 1, _loadAverage = 0, _exitCode = 0, _outputFormat = "", _showtime = SHOWTIME_NONE, _includePaths = empty std::__debug::list, _maxConfigs = 12, enforcedLang = Settings::None, nomsg = {_suppressions = std::__debug::map with 0 elements}, nofail = {_suppressions = std::__debug::map with 0 elements}, userDefines = "", userUndefs = std::__debug::set with 0 elements, userIncludes = empty std::__debug::list, configExcludePaths = std::__debug::set with 0 elements, reportProgress = false, library = {use = std::__debug::set with 0 elements, leakignore = std::__debug::set with 175 elements = {[0] = "abs", [1] = "acos", [2] = "asctime", [3] = "asin", [4] = "assert", [5] = "atan", [6] = "atan2", [7] = "atexit", [8] = "atof", [9] = "atoi", [10] = "atol", [11] = "atoll", [12] = "bsearch", [13] = "ceil", [14] = "clearerr", [15] = "clock", [16] = "cos", [17] = "cosh", [18] = "ctime", [19] = "difftime", [20] = "div", [21] = "exp", [22] = "fabs", [23] = "feof", [24] = "ferror", [25] = "fflush", [26] = "fgetc", [27] = "fgetpos", [28] = "fgets", [29] = "fgetwc", [30] = "floor", [31] = "fmod", [32] = "fnprintf", [33] = "fprintf", [34] = "fputc", [35] = "fputs", [36] = "fputwc", [37] = "fputws", [38] = "fread", [39] = "frexp", [40] = "fscanf", [41] = "fseek", [42] = "fsetpos", [43] = "ftell", [44] = "fwprintf", [45] = "fwrite", [46] = "fwscanf", [47] = "getc", [48] = "getchar", [49] = "getenv", [50] = "gets", [51] = "gmtime", [52] = "isalnum", [53] = "isalpha", [54] = "isblank", [55] = "iscntrl", [56] = "isdigit", [57] = "isgraph", [58] = "islower", [59] = "isprint", [60] = "ispunct", [61] = "isspace", [62] = "isupper", [63] = "isxdigit", [64] = "itoa", [65] = "labs", [66] = "ldexp", [67] = "ldiv", [68] = "llabs", [69] = "lldiv", [70] = "localtime", [71] = "log", [72] = "log10", [73] = "longjmp", [74] = "mblen", [75] = "mbstowcs", [76] = "mbtowc", [77] = "memchr", [78] = "memcmp", [79] = "memcpy", [80] = "memmove", [81] = "memset", [82] = "mktime", [83] = "modf", [84] = "perror", [85] = "pow", [86] = "printf", [87] = "putc", [88] = "putchar", [89] = "puts", [90] = "putwc", [91] = "qsort", [92] = "rand", [93] = "remove", [94] = "rename", [95] = "rewind", [96] = "round", [97] = "scanf", [98] = "setbuf", [99] = "setjmp", [100] = "setvbuf", [101] = "snprintf", [102] = "sprintf", [103] = "srand", [104] = "sscanf", [105] = "strbprk", [106] = "strcat", [107] = "strchr", [108] = "strcmp", [109] = "strcoll", [110] = "strcpy", [111] = "strcspn", [112] = "strerror", [113] = "strftime", [114] = "strlen", [115] = "strncat", [116] = "strncmp", [117] = "strncpy", [118] = "strrchr", [119] = "strspn", [120] = "strstr", [121] = "strtod", [122] = "strtof", [123] = "strtok", [124] = "strtol", [125] = "strtold", [126] = "strtoll", [127] = "strtoul", [128] = "strtoull", [129] = "strxfrm", [130] = "swscanf", [131] = "time", [132] = "tmpnam", [133] = "tolower", [134] = "toupper", [135] = "ungetc", [136] = "ungetwc", [137] = "va_arg", [138] = "va_copy", [139] = "va_end", [140] = "va_start", [141] = "vfprintf", [142] = "vfscanf", [143] = "vfwprintf", [144] = "vprintf", [145] = "vscanf", [146] = "vsnprintf", [147] = "vsprintf", [148] = "vwprintf", [149] = "wcscat", [150] = "wcschr", [151] = "wcscmp", [152] = "wcscoll", [153] = "wcscpy", [154] = "wcscspn", [155] = "wcslen", [156] = "wcsncat", [157] = "wcsncmp", [158] = "wcsncpy", [159] = "wcspbrk", [160] = "wcsrchr", [161] = "wcsspn", [162] = "wcsstr", [163] = "wcstod", [164] = "wcstof", [165] = "wcstol", [166] = "wcstold", [167] = "wcstoll", [168] = "wcstombs", [169] = "wcstoul", [170] = "wcstoull", [171] = "wcsxfrm", [172] = "wctomb", [173] = "wprintf", [174] = "wscanf"}, functionconst = std::__debug::set with 0 elements, functionpure = std::__debug::set with 44 elements = {[0] = "abs", [1] = "acos", [2] = "asin", [3] = "atan", [4] = "atan2", [5] = "atexit", [6] = "atof", [7] = "atoi", [8] = "atol", [9] = "atoll", [10] = "bsearch", [11] = "ceil", [12] = "cos", [13] = "cosh", [14] = "div", [15] = "exp", [16] = "fabs", [17] = "floor", [18] = "fmod", [19] = "isalnum", [20] = "isalpha", [21] = "isblank", [22] = "iscntrl", [23] = "isdigit", [24] = "isgraph", [25] = "islower", [26] = "isprint", [27] = "ispunct", [28] = "isspace", [29] = "isupper", [30] = "isxdigit", [31] = "labs", [32] = "ldexp", [33] = "ldiv", [34] = "llabs", [35] = "lldiv", [36] = "memchr", [37] = "memcmp", [38] = "pow", [39] = "round", [40] = "strbprk", [41] = "strcmp", [42] = "strtok", [43] = "wcscmp"}, useretval = std::__debug::set with 88 elements = {[0] = "abs", [1] = "acos", [2] = "alloca", [3] = "asctime", [4] = "asin", [5] = "atan", [6] = "atan2", [7] = "atof", [8] = "atoi", [9] = "atol", [10] = "atoll", [11] = "bsearch", [12] = "calloc", [13] = "ceil", [14] = "cos", [15] = "cosh", [16] = "ctime", [17] = "difftime", [18] = "exp", [19] = "fabs", [20] = "feof", [21] = "ferror", [22] = "floor", [23] = "fmod", [24] = "fopen", [25] = "getenv", [26] = "gmtime", [27] = "isalnum", [28] = "isalpha", [29] = "isblank", [30] = "iscntrl", [31] = "isdigit", [32] = "isgraph", [33] = "islower", [34] = "isprint", [35] = "ispunct", [36] = "isspace", [37] = "isupper", [38] = "isxdigit", [39] = "labs", [40] = "ldexp", [41] = "llabs", [42] = "log10", [43] = "malloc", [44] = "mblen", [45] = "memchr", [46] = "memcmp", [47] = "pow", [48] = "rand", [49] = "round", [50] = "strbprk", [51] = "strchr", [52] = "strcmp", [53] = "strcoll", [54] = "strcspn", [55] = "strerror", [56] = "strlen", [57] = "strncmp", [58] = "strrchr", [59] = "strspn", [60] = "strstr", [61] = "strtod", [62] = "strtof", [63] = "strtol", [64] = "strtold", [65] = "strtoll", [66] = "strtoul", [67] = "strtoull", [68] = "tmpfile", [69] = "tolower", [70] = "toupper", [71] = "wcschr", [72] = "wcscmp", [73] = "wcscoll", [74] = "wcscspn", [75] = "wcslen", [76] = "wcsncmp", [77] = "wcspbrk", [78] = "wcsrchr", [79] = "wcsspn", [80] = "wcsstr", [81] = "wcstod", [82] = "wcstof", [83] = "wcstol", [84] = "wcstold", [85] = "wcstoll", [86] = "wcstoul", [87] = "wcstoull"}, containers = std::__debug::map with 8 elements = {["stdAllString"] = {startPattern = "", endPattern = "> !!::", functions = std::__debug::map with 21 elements = {["at"] = {action = Library::Container::NO_ACTION, yield = Library::Container::AT_INDEX}, ["back"] = {action = Library::Container::NO_ACTION, yield = Library::Container::ITEM}, ["begin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["c_str"] = {action = Library::Container::NO_ACTION, yield = Library::Container::BUFFER_NT}, ["cbegin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["cend"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["clear"] = {action = Library::Container::CLEAR, yield = Library::Container::NO_YIELD}, ["crbegin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["crend"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["data"] = {action = Library::Container::NO_ACTION, yield = Library::Container::BUFFER}, ["empty"] = {action = Library::Container::NO_ACTION, yield = Library::Container::EMPTY}, ["end"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["find"] = {action = Library::Container::FIND, yield = Library::Container::NO_YIELD}, ["front"] = {action = Library::Container::NO_ACTION, yield = Library::Container::ITEM}, ["length"] = {action = Library::Container::NO_ACTION, yield = Library::Container::SIZE}, ["pop_back"] = {action = Library::Container::POP, yield = Library::Container::NO_YIELD}, ["push_back"] = {action = Library::Container::PUSH, yield = Library::Container::NO_YIELD}, ["rbegin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["rend"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["resize"] = {action = Library::Container::RESIZE, yield = Library::Container::NO_YIELD}, ["size"] = {action = Library::Container::NO_ACTION, yield = Library::Container::SIZE}}, type_templateArgNo = 0, size_templateArgNo = -1, arrayLike_indexOp = true, stdStringLike = true}, ["stdArray"] = {startPattern = "std :: array <", endPattern = "> !!::", functions = std::__debug::map with 16 elements = {["at"] = {action = Library::Container::NO_ACTION, yield = Library::Container::AT_INDEX}, ["back"] = {action = Library::Container::NO_ACTION, yield = Library::Container::ITEM}, ["begin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["cbegin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["cend"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["clear"] = {action = Library::Container::CLEAR, yield = Library::Container::NO_YIELD}, ["crbegin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["crend"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["data"] = {action = Library::Container::NO_ACTION, yield = Library::Container::BUFFER}, ["empty"] = {action = Library::Container::NO_ACTION, yield = Library::Container::EMPTY}, ["end"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["front"] = {action = Library::Container::NO_ACTION, yield = Library::Container::ITEM}, ["rbegin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["rend"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["resize"] = {action = Library::Container::RESIZE, yield = Library::Container::NO_YIELD}, ["size"] = {action = Library::Container::NO_ACTION, yield = Library::Container::SIZE}}, type_templateArgNo = 0, size_templateArgNo = 1, arrayLike_indexOp = true, stdStringLike = false}, ["stdBasicString"] = {startPattern = "std :: basic_string <", endPattern = "> !!::", functions = std::__debug::map with 21 elements = {["at"] = {action = Library::Container::NO_ACTION, yield = Library::Container::AT_INDEX}, ["back"] = {action = Library::Container::NO_ACTION, yield = Library::Container::ITEM}, ["begin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["c_str"] = {action = Library::Container::NO_ACTION, yield = Library::Container::BUFFER_NT}, ["cbegin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["cend"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["clear"] = {action = Library::Container::CLEAR, yield = Library::Container::NO_YIELD}, ["crbegin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["crend"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["data"] = {action = Library::Container::NO_ACTION, yield = Library::Container::BUFFER}, ["empty"] = {action = Library::Container::NO_ACTION, yield = Library::Container::EMPTY}, ["end"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["find"] = {action = Library::Container::FIND, yield = Library::Container::NO_YIELD}, ["front"] = {action = Library::Container::NO_ACTION, yield = Library::Container::ITEM}, ["length"] = {action = Library::Container::NO_ACTION, yield = Library::Container::SIZE}, ["pop_back"] = {action = Library::Container::POP, yield = Library::Container::NO_YIELD}, ["push_back"] = {action = Library::Container::PUSH, yield = Library::Container::NO_YIELD}, ["rbegin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["rend"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["resize"] = {action = Library::Container::RESIZE, yield = Library::Container::NO_YIELD}, ["size"] = {action = Library::Container::NO_ACTION, yield = Library::Container::SIZE}}, type_templateArgNo = 0, size_templateArgNo = -1, arrayLike_indexOp = true, stdStringLike = true}, ["stdContainer"] = {startPattern = "", endPattern = "> !!::", functions = std::__debug::map with 12 elements = {["begin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["cbegin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["cend"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["clear"] = {action = Library::Container::CLEAR, yield = Library::Container::NO_YIELD}, ["crbegin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["crend"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["empty"] = {action = Library::Container::NO_ACTION, yield = Library::Container::EMPTY}, ["end"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["rbegin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["rend"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["resize"] = {action = Library::Container::RESIZE, yield = Library::Container::NO_YIELD}, ["size"] = {action = Library::Container::NO_ACTION, yield = Library::Container::SIZE}}, type_templateArgNo = 0, size_templateArgNo = -1, arrayLike_indexOp = false, stdStringLike = false}, ["stdMap"] = {startPattern = "std :: map <", endPattern = "> !!::", functions = std::__debug::map with 14 elements = {["at"] = {action = Library::Container::NO_ACTION, yield = Library::Container::AT_INDEX}, ["begin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["cbegin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["cend"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["clear"] = {action = Library::Container::CLEAR, yield = Library::Container::NO_YIELD}, ["crbegin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["crend"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["empty"] = {action = Library::Container::NO_ACTION, yield = Library::Container::EMPTY}, ["end"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["find"] = {action = Library::Container::FIND, yield = Library::Container::NO_YIELD}, ["rbegin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["rend"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["resize"] = {action = Library::Container::RESIZE, yield = Library::Container::NO_YIELD}, ["size"] = {action = Library::Container::NO_ACTION, yield = Library::Container::SIZE}}, type_templateArgNo = 1, size_templateArgNo = -1, arrayLike_indexOp = false, stdStringLike = false}, ["stdSet"] = {startPattern = "std :: set <", endPattern = "> !!::", functions = std::__debug::map with 13 elements = {["begin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["cbegin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["cend"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["clear"] = {action = Library::Container::CLEAR, yield = Library::Container::NO_YIELD}, ["crbegin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["crend"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["empty"] = {action = Library::Container::NO_ACTION, yield = Library::Container::EMPTY}, ["end"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["find"] = {action = Library::Container::FIND, yield = Library::Container::NO_YIELD}, ["rbegin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["rend"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["resize"] = {action = Library::Container::RESIZE, yield = Library::Container::NO_YIELD}, ["size"] = {action = Library::Container::NO_ACTION, yield = Library::Container::SIZE}}, type_templateArgNo = 0, size_templateArgNo = -1, arrayLike_indexOp = false, stdStringLike = false}, ["stdString"] = {startPattern = "std :: string|wstring|u16string|u32string", endPattern = "", functions = std::__debug::map with 21 elements = {["at"] = {action = Library::Container::NO_ACTION, yield = Library::Container::AT_INDEX}, ["back"] = {action = Library::Container::NO_ACTION, yield = Library::Container::ITEM}, ["begin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["c_str"] = {action = Library::Container::NO_ACTION, yield = Library::Container::BUFFER_NT}, ["cbegin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["cend"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["clear"] = {action = Library::Container::CLEAR, yield = Library::Container::NO_YIELD}, ["crbegin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["crend"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["data"] = {action = Library::Container::NO_ACTION, yield = Library::Container::BUFFER}, ["empty"] = {action = Library::Container::NO_ACTION, yield = Library::Container::EMPTY}, ["end"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["find"] = {action = Library::Container::FIND, yield = Library::Container::NO_YIELD}, ["front"] = {action = Library::Container::NO_ACTION, yield = Library::Container::ITEM}, ["length"] = {action = Library::Container::NO_ACTION, yield = Library::Container::SIZE}, ["pop_back"] = {action = Library::Container::POP, yield = Library::Container::NO_YIELD}, ["push_back"] = {action = Library::Container::PUSH, yield = Library::Container::NO_YIELD}, ["rbegin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["rend"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["resize"] = {action = Library::Container::RESIZE, yield = Library::Container::NO_YIELD}, ["size"] = {action = Library::Container::NO_ACTION, yield = Library::Container::SIZE}}, type_templateArgNo = 0, size_templateArgNo = -1, arrayLike_indexOp = true, stdStringLike = true}, ["stdVectorDeque"] = {startPattern = "std :: vector|deque <", endPattern = "> !!::", functions = std::__debug::map with 20 elements = {["at"] = {action = Library::Container::NO_ACTION, yield = Library::Container::AT_INDEX}, ["back"] = {action = Library::Container::NO_ACTION, yield = Library::Container::ITEM}, ["begin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["cbegin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["cend"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["clear"] = {action = Library::Container::CLEAR, yield = Library::Container::NO_YIELD}, ["crbegin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["crend"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["data"] = {action = Library::Container::NO_ACTION, yield = Library::Container::BUFFER}, ["empty"] = {action = Library::Container::NO_ACTION, yield = Library::Container::EMPTY}, ["end"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["front"] = {action = Library::Container::NO_ACTION, yield = Library::Container::ITEM}, ["pop_back"] = {action = Library::Container::POP, yield = Library::Container::NO_YIELD}, ["pop_front"] = {action = Library::Container::POP, yield = Library::Container::NO_YIELD}, ["push_back"] = {action = Library::Container::PUSH, yield = Library::Container::NO_YIELD}, ["push_front"] = {action = Library::Container::PUSH, yield = Library::Container::NO_YIELD}, ["rbegin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["rend"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["resize"] = {action = Library::Container::RESIZE, yield = Library::Container::NO_YIELD}, ["size"] = {action = Library::Container::NO_ACTION, yield = Library::Container::SIZE}}, type_templateArgNo = 0, size_templateArgNo = -1, arrayLike_indexOp = true, stdStringLike = false}}, argumentChecks = std::__debug::map with 174 elements = {["abs"] = std::__debug::map with 1 elements = {[1] = {notbool = true, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["acos"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["alloca"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["asctime"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["asin"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["atan"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["atan2"] = std::__debug::map with 2 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["atexit"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = true, notuninit = false, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["atof"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["atoi"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["atol"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["atoll"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["bsearch"] = std::__debug::map with 5 elements = {[1] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [3] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [4] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [5] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["calloc"] = std::__debug::map with 2 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["ceil"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["clearerr"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["cos"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["cosh"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["ctime"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["difftime"] = std::__debug::map with 2 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["div"] = std::__debug::map with 2 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["exit"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["exp"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["fabs"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["fclose"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["feof"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["ferror"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["fflush"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["fgetc"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["fgetpos"] = std::__debug::map with 2 elements = {[1] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["fgets"] = std::__debug::map with 3 elements = {[1] = {notbool = false, notnull = true, notuninit = false, formatstr = false, strz = false, valid = "", minsizes = std::__debug::list = {[0] = {type = Library::ArgumentChecks::MinSize::ARGVALUE, arg = 2, arg2 = 0}}}, [2] = {notbool = true, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "0:", minsizes = empty std::__debug::list}, [3] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["fgetwc"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["floor"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["fmod"] = std::__debug::map with 2 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["fnprintf"] = std::__debug::map with 1 elements = {[3] = {notbool = false, notnull = false, notuninit = false, formatstr = true, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["fopen"] = std::__debug::map with 2 elements = {[1] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["fprintf"] = std::__debug::map with 3 elements = {[-1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [1] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = false, notuninit = false, formatstr = true, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["fputc"] = std::__debug::map with 2 elements = {[1] = {notbool = true, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "0:", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["fputs"] = std::__debug::map with 2 elements = {[1] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["fputwc"] = std::__debug::map with 2 elements = {[1] = {notbool = true, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["fputws"] = std::__debug::map with 2 elements = {[1] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["fread"] = std::__debug::map with 4 elements = {[1] = {notbool = false, notnull = true, notuninit = false, formatstr = false, strz = false, valid = "", minsizes = std::__debug::list = {[0] = {type = Library::ArgumentChecks::MinSize::MUL, arg = 2, arg2 = 3}}}, [2] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [3] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [4] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["free"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["freopen"] = std::__debug::map with 3 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [3] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["frexp"] = std::__debug::map with 2 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = true, notuninit = false, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["fscanf"] = std::__debug::map with 2 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = false, notuninit = false, formatstr = true, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["fseek"] = std::__debug::map with 3 elements = {[1] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [3] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["fsetpos"] = std::__debug::map with 2 elements = {[1] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["ftell"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["fwprintf"] = std::__debug::map with 1 elements = {[2] = {notbool = false, notnull = false, notuninit = false, formatstr = true, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["fwrite"] = std::__debug::map with 4 elements = {[1] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = std::__debug::list = {[0] = {type = Library::ArgumentChecks::MinSize::MUL, arg = 2, arg2 = 3}}}, [2] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [3] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [4] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["fwscanf"] = std::__debug::map with 1 elements = {[2] = {notbool = false, notnull = false, notuninit = false, formatstr = true, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["getc"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["getenv"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["gets"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = true, notuninit = false, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["gmtime"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["isalnum"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = false, formatstr = false, strz = false, valid = "0:255", minsizes = empty std::__debug::list}}, ["isalpha"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = false, formatstr = false, strz = false, valid = "0:255", minsizes = empty std::__debug::list}}, ["isblank"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = false, formatstr = false, strz = false, valid = "0:255", minsizes = empty std::__debug::list}}, ["iscntrl"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = false, formatstr = false, strz = false, valid = "0:255", minsizes = empty std::__debug::list}}, ["isdigit"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = false, formatstr = false, strz = false, valid = "0:255", minsizes = empty std::__debug::list}}, ["isgraph"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = false, formatstr = false, strz = false, valid = "0:255", minsizes = empty std::__debug::list}}, ["islower"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = false, formatstr = false, strz = false, valid = "0:255", minsizes = empty std::__debug::list}}, ["isprint"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = false, formatstr = false, strz = false, valid = "0:255", minsizes = empty std::__debug::list}}, ["ispunct"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = false, formatstr = false, strz = false, valid = "0:255", minsizes = empty std::__debug::list}}, ["isspace"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = false, formatstr = false, strz = false, valid = "0:255", minsizes = empty std::__debug::list}}, ["isupper"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = false, formatstr = false, strz = false, valid = "0:255", minsizes = empty std::__debug::list}}, ["isxdigit"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = false, formatstr = false, strz = false, valid = "0:255", minsizes = empty std::__debug::list}}, ["itoa"] = std::__debug::map with 2 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = true, notuninit = false, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["labs"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["ldexp"] = std::__debug::map with 2 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["ldiv"] = std::__debug::map with 2 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["llabs"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["lldiv"] = std::__debug::map with 2 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["localtime"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["log"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["log10"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["longjmp"] = std::__debug::map with 2 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["malloc"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["mblen"] = std::__debug::map with 2 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["mbstowcs"] = std::__debug::map with 2 elements = {[2] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [3] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["mbtowc"] = std::__debug::map with 2 elements = {[2] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [3] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["memchr"] = std::__debug::map with 3 elements = {[1] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = std::__debug::list = {[0] = {type = Library::ArgumentChecks::MinSize::ARGVALUE, arg = 3, arg2 = 0}}}, [2] = {notbool = true, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "0:", minsizes = empty std::__debug::list}, [3] = {notbool = true, notnull = false, notuninit = false, formatstr = false, strz = false, valid = "0:", minsizes = empty std::__debug::list}}, ["memcmp"] = std::__debug::map with 3 elements = {[1] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = std::__debug::list = {[0] = {type = Library::ArgumentChecks::MinSize::ARGVALUE, arg = 3, arg2 = 0}}}, [2] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = std::__debug::list = {[0] = {type = Library::ArgumentChecks::MinSize::ARGVALUE, arg = 3, arg2 = 0}}}, [3] = {notbool = true, notnull = false, notuninit = false, formatstr = false, strz = false, valid = "0:", minsizes = empty std::__debug::list}}, ["memcpy"] = std::__debug::map with 3 elements = {[1] = {notbool = false, notnull = true, notuninit = false, formatstr = false, strz = false, valid = "", minsizes = std::__debug::list = {[0] = {type = Library::ArgumentChecks::MinSize::ARGVALUE, arg = 3, arg2 = 0}}}, [2] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = std::__debug::list = {[0] = {type = Library::ArgumentChecks::MinSize::ARGVALUE, arg = 3, arg2 = 0}}}, [3] = {notbool = true, notnull = false, notuninit = false, formatstr = false, strz = false, valid = "0:", minsizes = empty std::__debug::list}}, ["memmove"] = std::__debug::map with 3 elements = {[1] = {notbool = false, notnull = true, notuninit = false, formatstr = false, strz = false, valid = "", minsizes = std::__debug::list = {[0] = {type = Library::ArgumentChecks::MinSize::ARGVALUE, arg = 3, arg2 = 0}}}, [2] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = std::__debug::list = {[0] = {type = Library::ArgumentChecks::MinSize::ARGVALUE, arg = 3, arg2 = 0}}}, [3] = {notbool = true, notnull = false, notuninit = false, formatstr = false, strz = false, valid = "0:", minsizes = empty std::__debug::list}}, ["memset"] = std::__debug::map with 3 elements = {[1] = {notbool = false, notnull = true, notuninit = false, formatstr = false, strz = false, valid = "", minsizes = std::__debug::list = {[0] = {type = Library::ArgumentChecks::MinSize::ARGVALUE, arg = 3, arg2 = 0}}}, [2] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [3] = {notbool = true, notnull = false, notuninit = false, formatstr = false, strz = false, valid = "0:", minsizes = empty std::__debug::list}}, ["mktime"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["modf"] = std::__debug::map with 2 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = true, notuninit = false, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["perror"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["pow"] = std::__debug::map with 2 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["printf"] = std::__debug::map with 2 elements = {[-1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [1] = {notbool = false, notnull = false, notuninit = false, formatstr = true, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["putc"] = std::__debug::map with 2 elements = {[1] = {notbool = true, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "0:", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["putchar"] = std::__debug::map with 1 elements = {[1] = {notbool = true, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "0:", minsizes = empty std::__debug::list}}, ["puts"] = std::__debug::map with 1 elements = {[1] = {notbool = true, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "0:", minsizes = empty std::__debug::list}}, ["putwc"] = std::__debug::map with 2 elements = {[1] = {notbool = true, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["qsort"] = std::__debug::map with 4 elements = {[1] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [3] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [4] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["realloc"] = std::__debug::map with 1 elements = {[2] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["remove"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["rename"] = std::__debug::map with 2 elements = {[1] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}...}, returnuninitdata = std::__debug::set with 1 elements = {[0] = "malloc"}, defines = std::__debug::vector of length 0, capacity 0, allocid = 3, _files = std::__debug::set with 1 elements = {[0] = "/home/martin/cppcheck/cfg/std.cfg"}, _alloc = std::__debug::map with 5 elements = {["calloc"] = 2, ["fopen"] = 3, ["freopen"] = 3, ["malloc"] = 2, ["tmpfile"] = 3}, _dealloc = std::__debug::map with 2 elements = {["fclose"] = 3, ["free"] = 2}, _noreturn = std::__debug::map with 185 elements = {["abort"] = true, ["abs"] = false, ["acos"] = false, ["alloca"] = false, ["asctime"] = false, ["asin"] = false, ["atan"] = false, ["atan2"] = false, ["atexit"] = false, ["atof"] = false, ["atoi"] = false, ["atol"] = false, ["atoll"] = false, ["bsearch"] = false, ["calloc"] = false, ["ceil"] = false, ["clearerr"] = false, ["clock"] = false, ["cos"] = false, ["cosh"] = false, ["ctime"] = false, ["difftime"] = false, ["div"] = false, ["exit"] = true, ["exp"] = false, ["fabs"] = false, ["fclose"] = false, ["feof"] = false, ["ferror"] = false, ["fflush"] = false, ["fgetc"] = false, ["fgetpos"] = false, ["fgets"] = false, ["fgetwc"] = false, ["floor"] = false, ["fmod"] = false, ["fnprintf"] = false, ["fopen"] = false, ["fprintf"] = false, ["fputc"] = false, ["fputs"] = false, ["fputwc"] = false, ["fputws"] = false, ["fread"] = false, ["free"] = false, ["freopen"] = false, ["frexp"] = false, ["fscanf"] = false, ["fseek"] = false, ["fsetpos"] = false, ["ftell"] = false, ["fwprintf"] = false, ["fwrite"] = false, ["fwscanf"] = false, ["getc"] = false, ["getchar"] = false, ["getenv"] = false, ["gets"] = false, ["gmtime"] = false, ["isalnum"] = false, ["isalpha"] = false, ["isblank"] = false, ["iscntrl"] = false, ["isdigit"] = false, ["isgraph"] = false, ["islower"] = false, ["isprint"] = false, ["ispunct"] = false, ["isspace"] = false, ["isupper"] = false, ["isxdigit"] = false, ["itoa"] = false, ["labs"] = false, ["ldexp"] = false, ["ldiv"] = false, ["llabs"] = false, ["lldiv"] = false, ["localtime"] = false, ["log"] = false, ["log10"] = false, ["longjmp"] = false, ["malloc"] = false, ["mblen"] = false, ["mbstowcs"] = false, ["mbtowc"] = false, ["memchr"] = false, ["memcmp"] = false, ["memcpy"] = false, ["memmove"] = false, ["memset"] = false, ["mktime"] = false, ["modf"] = false, ["perror"] = false, ["pow"] = false, ["printf"] = false, ["putc"] = false, ["putchar"] = false, ["puts"] = false, ["putwc"] = false, ["qsort"] = false...}, _ignorefunction = std::__debug::set with 0 elements, _reporterrors = std::__debug::map with 0 elements, _processAfterCode = std::__debug::map with 0 elements, _markupExtensions = std::__debug::set with 0 elements, _keywords = std::__debug::map with 0 elements, _executableblocks = std::__debug::map with 0 elements, _exporters = std::__debug::map with 0 elements, _importers = std::__debug::map with 0 elements, _reflection = std::__debug::map with 0 elements, _formatstr = std::__debug::map with 21 elements = {["fnprintf"] = {first = false, second = false}, ["fprintf"] = {first = false, second = false}, ["fscanf"] = {first = true, second = false}, ["fwprintf"] = {first = false, second = false}, ["fwscanf"] = {first = true, second = false}, ["printf"] = {first = false, second = false}, ["scanf"] = {first = true, second = false}, ["snprintf"] = {first = false, second = false}, ["sprintf"] = {first = false, second = false}, ["sscanf"] = {first = true, second = false}, ["swscanf"] = {first = true, second = false}, ["vfprintf"] = {first = false, second = false}, ["vfscanf"] = {first = true, second = false}, ["vfwprintf"] = {first = false, second = false}, ["vprintf"] = {first = false, second = false}, ["vscanf"] = {first = true, second = false}, ["vsnprintf"] = {first = false, second = false}, ["vsprintf"] = {first = false, second = false}, ["vwprintf"] = {first = false, second = false}, ["wprintf"] = {first = false, second = false}, ["wscanf"] = {first = true, second = false}}, podtypes = std::__debug::map with 20 elements = {["double_t"] = {size = 0, sign = 0 '\000'}, ["float_t"] = {size = 0, sign = 0 '\000'}, ["int16_t"] = {size = 0, sign = 115 's'}, ["int32_t"] = {size = 0, sign = 115 's'}, ["int64_t"] = {size = 0, sign = 115 's'}, ["int8_t"] = {size = 0, sign = 115 's'}, ["int_fast16_t"] = {size = 0, sign = 115 's'}, ["int_fast32_t"] = {size = 0, sign = 115 's'}, ["int_fast64_t"] = {size = 0, sign = 115 's'}, ["int_fast8_t"] = {size = 0, sign = 115 's'}, ["intptr_t"] = {size = 0, sign = 115 's'}, ["uint16_t"] = {size = 0, sign = 117 'u'}, ["uint32_t"] = {size = 0, sign = 117 'u'}, ["uint64_t"] = {size = 0, sign = 117 'u'}, ["uint8_t"] = {size = 0, sign = 117 'u'}, ["uint_fast16_t"] = {size = 0, sign = 117 'u'}, ["uint_fast32_t"] = {size = 0, sign = 117 'u'}, ["uint_fast64_t"] = {size = 0, sign = 117 'u'}, ["uint_fast8_t"] = {size = 0, sign = 117 'u'}, ["uintptr_t"] = {size = 0, sign = 117 'u'}}, platform_types = std::__debug::map with 0 elements, platforms = std::__debug::map with 0 elements}, rules = empty std::__debug::list, checkConfiguration = false, checkLibrary = false, standards = {c = Standards::C11, cpp = Standards::CPP11, posix = false}, sizeof_bool = 1, sizeof_short = 2, sizeof_int = 4, sizeof_long = 4, sizeof_long_long = 8, sizeof_float = 4, sizeof_double = 8, sizeof_long_double = 12, sizeof_wchar_t = 4, sizeof_size_t = 4, sizeof_pointer = 4, platformType = Settings::Unspecified}
#12 0x082ae00b in CppCheckExecutor::check (this=0xbfffefa8, argc=2, argv=0xbffff0b4) at cli/cppcheckexecutor.cpp:200
        cppCheck = {<ErrorLogger> = {_vptr.ErrorLogger = 0x84dd068 <vtable for CppCheck+8>}, _errorList = empty std::__debug::list, _settings = {_append = "", _enabled = std::__debug::set with 0 elements, _terminate = false, debug = false, debugwarnings = false, debugFalsePositive = false, dump = false, exceptionHandling = false, inconclusive = false, experimental = false, _errorsOnly = false, _inlineSuppressions = false, _verbose = false, _force = false, _relativePaths = false, _basePaths = std::__debug::vector of length 0, capacity 0, _xml = false, _xml_version = 1, _jobs = 1, _loadAverage = 0, _exitCode = 0, _outputFormat = "", _showtime = SHOWTIME_NONE, _includePaths = empty std::__debug::list, _maxConfigs = 12, enforcedLang = Settings::None, nomsg = {_suppressions = std::__debug::map with 0 elements}, nofail = {_suppressions = std::__debug::map with 0 elements}, userDefines = "", userUndefs = std::__debug::set with 0 elements, userIncludes = empty std::__debug::list, configExcludePaths = std::__debug::set with 0 elements, reportProgress = false, library = {use = std::__debug::set with 0 elements, leakignore = std::__debug::set with 175 elements = {[0] = "abs", [1] = "acos", [2] = "asctime", [3] = "asin", [4] = "assert", [5] = "atan", [6] = "atan2", [7] = "atexit", [8] = "atof", [9] = "atoi", [10] = "atol", [11] = "atoll", [12] = "bsearch", [13] = "ceil", [14] = "clearerr", [15] = "clock", [16] = "cos", [17] = "cosh", [18] = "ctime", [19] = "difftime", [20] = "div", [21] = "exp", [22] = "fabs", [23] = "feof", [24] = "ferror", [25] = "fflush", [26] = "fgetc", [27] = "fgetpos", [28] = "fgets", [29] = "fgetwc", [30] = "floor", [31] = "fmod", [32] = "fnprintf", [33] = "fprintf", [34] = "fputc", [35] = "fputs", [36] = "fputwc", [37] = "fputws", [38] = "fread", [39] = "frexp", [40] = "fscanf", [41] = "fseek", [42] = "fsetpos", [43] = "ftell", [44] = "fwprintf", [45] = "fwrite", [46] = "fwscanf", [47] = "getc", [48] = "getchar", [49] = "getenv", [50] = "gets", [51] = "gmtime", [52] = "isalnum", [53] = "isalpha", [54] = "isblank", [55] = "iscntrl", [56] = "isdigit", [57] = "isgraph", [58] = "islower", [59] = "isprint", [60] = "ispunct", [61] = "isspace", [62] = "isupper", [63] = "isxdigit", [64] = "itoa", [65] = "labs", [66] = "ldexp", [67] = "ldiv", [68] = "llabs", [69] = "lldiv", [70] = "localtime", [71] = "log", [72] = "log10", [73] = "longjmp", [74] = "mblen", [75] = "mbstowcs", [76] = "mbtowc", [77] = "memchr", [78] = "memcmp", [79] = "memcpy", [80] = "memmove", [81] = "memset", [82] = "mktime", [83] = "modf", [84] = "perror", [85] = "pow", [86] = "printf", [87] = "putc", [88] = "putchar", [89] = "puts", [90] = "putwc", [91] = "qsort", [92] = "rand", [93] = "remove", [94] = "rename", [95] = "rewind", [96] = "round", [97] = "scanf", [98] = "setbuf", [99] = "setjmp", [100] = "setvbuf", [101] = "snprintf", [102] = "sprintf", [103] = "srand", [104] = "sscanf", [105] = "strbprk", [106] = "strcat", [107] = "strchr", [108] = "strcmp", [109] = "strcoll", [110] = "strcpy", [111] = "strcspn", [112] = "strerror", [113] = "strftime", [114] = "strlen", [115] = "strncat", [116] = "strncmp", [117] = "strncpy", [118] = "strrchr", [119] = "strspn", [120] = "strstr", [121] = "strtod", [122] = "strtof", [123] = "strtok", [124] = "strtol", [125] = "strtold", [126] = "strtoll", [127] = "strtoul", [128] = "strtoull", [129] = "strxfrm", [130] = "swscanf", [131] = "time", [132] = "tmpnam", [133] = "tolower", [134] = "toupper", [135] = "ungetc", [136] = "ungetwc", [137] = "va_arg", [138] = "va_copy", [139] = "va_end", [140] = "va_start", [141] = "vfprintf", [142] = "vfscanf", [143] = "vfwprintf", [144] = "vprintf", [145] = "vscanf", [146] = "vsnprintf", [147] = "vsprintf", [148] = "vwprintf", [149] = "wcscat", [150] = "wcschr", [151] = "wcscmp", [152] = "wcscoll", [153] = "wcscpy", [154] = "wcscspn", [155] = "wcslen", [156] = "wcsncat", [157] = "wcsncmp", [158] = "wcsncpy", [159] = "wcspbrk", [160] = "wcsrchr", [161] = "wcsspn", [162] = "wcsstr", [163] = "wcstod", [164] = "wcstof", [165] = "wcstol", [166] = "wcstold", [167] = "wcstoll", [168] = "wcstombs", [169] = "wcstoul", [170] = "wcstoull", [171] = "wcsxfrm", [172] = "wctomb", [173] = "wprintf", [174] = "wscanf"}, functionconst = std::__debug::set with 0 elements, functionpure = std::__debug::set with 44 elements = {[0] = "abs", [1] = "acos", [2] = "asin", [3] = "atan", [4] = "atan2", [5] = "atexit", [6] = "atof", [7] = "atoi", [8] = "atol", [9] = "atoll", [10] = "bsearch", [11] = "ceil", [12] = "cos", [13] = "cosh", [14] = "div", [15] = "exp", [16] = "fabs", [17] = "floor", [18] = "fmod", [19] = "isalnum", [20] = "isalpha", [21] = "isblank", [22] = "iscntrl", [23] = "isdigit", [24] = "isgraph", [25] = "islower", [26] = "isprint", [27] = "ispunct", [28] = "isspace", [29] = "isupper", [30] = "isxdigit", [31] = "labs", [32] = "ldexp", [33] = "ldiv", [34] = "llabs", [35] = "lldiv", [36] = "memchr", [37] = "memcmp", [38] = "pow", [39] = "round", [40] = "strbprk", [41] = "strcmp", [42] = "strtok", [43] = "wcscmp"}, useretval = std::__debug::set with 88 elements = {[0] = "abs", [1] = "acos", [2] = "alloca", [3] = "asctime", [4] = "asin", [5] = "atan", [6] = "atan2", [7] = "atof", [8] = "atoi", [9] = "atol", [10] = "atoll", [11] = "bsearch", [12] = "calloc", [13] = "ceil", [14] = "cos", [15] = "cosh", [16] = "ctime", [17] = "difftime", [18] = "exp", [19] = "fabs", [20] = "feof", [21] = "ferror", [22] = "floor", [23] = "fmod", [24] = "fopen", [25] = "getenv", [26] = "gmtime", [27] = "isalnum", [28] = "isalpha", [29] = "isblank", [30] = "iscntrl", [31] = "isdigit", [32] = "isgraph", [33] = "islower", [34] = "isprint", [35] = "ispunct", [36] = "isspace", [37] = "isupper", [38] = "isxdigit", [39] = "labs", [40] = "ldexp", [41] = "llabs", [42] = "log10", [43] = "malloc", [44] = "mblen", [45] = "memchr", [46] = "memcmp", [47] = "pow", [48] = "rand", [49] = "round", [50] = "strbprk", [51] = "strchr", [52] = "strcmp", [53] = "strcoll", [54] = "strcspn", [55] = "strerror", [56] = "strlen", [57] = "strncmp", [58] = "strrchr", [59] = "strspn", [60] = "strstr", [61] = "strtod", [62] = "strtof", [63] = "strtol", [64] = "strtold", [65] = "strtoll", [66] = "strtoul", [67] = "strtoull", [68] = "tmpfile", [69] = "tolower", [70] = "toupper", [71] = "wcschr", [72] = "wcscmp", [73] = "wcscoll", [74] = "wcscspn", [75] = "wcslen", [76] = "wcsncmp", [77] = "wcspbrk", [78] = "wcsrchr", [79] = "wcsspn", [80] = "wcsstr", [81] = "wcstod", [82] = "wcstof", [83] = "wcstol", [84] = "wcstold", [85] = "wcstoll", [86] = "wcstoul", [87] = "wcstoull"}, containers = std::__debug::map with 8 elements = {["stdAllString"] = {startPattern = "", endPattern = "> !!::", functions = std::__debug::map with 21 elements = {["at"] = {action = Library::Container::NO_ACTION, yield = Library::Container::AT_INDEX}, ["back"] = {action = Library::Container::NO_ACTION, yield = Library::Container::ITEM}, ["begin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["c_str"] = {action = Library::Container::NO_ACTION, yield = Library::Container::BUFFER_NT}, ["cbegin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["cend"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["clear"] = {action = Library::Container::CLEAR, yield = Library::Container::NO_YIELD}, ["crbegin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["crend"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["data"] = {action = Library::Container::NO_ACTION, yield = Library::Container::BUFFER}, ["empty"] = {action = Library::Container::NO_ACTION, yield = Library::Container::EMPTY}, ["end"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["find"] = {action = Library::Container::FIND, yield = Library::Container::NO_YIELD}, ["front"] = {action = Library::Container::NO_ACTION, yield = Library::Container::ITEM}, ["length"] = {action = Library::Container::NO_ACTION, yield = Library::Container::SIZE}, ["pop_back"] = {action = Library::Container::POP, yield = Library::Container::NO_YIELD}, ["push_back"] = {action = Library::Container::PUSH, yield = Library::Container::NO_YIELD}, ["rbegin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["rend"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["resize"] = {action = Library::Container::RESIZE, yield = Library::Container::NO_YIELD}, ["size"] = {action = Library::Container::NO_ACTION, yield = Library::Container::SIZE}}, type_templateArgNo = 0, size_templateArgNo = -1, arrayLike_indexOp = true, stdStringLike = true}, ["stdArray"] = {startPattern = "std :: array <", endPattern = "> !!::", functions = std::__debug::map with 16 elements = {["at"] = {action = Library::Container::NO_ACTION, yield = Library::Container::AT_INDEX}, ["back"] = {action = Library::Container::NO_ACTION, yield = Library::Container::ITEM}, ["begin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["cbegin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["cend"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["clear"] = {action = Library::Container::CLEAR, yield = Library::Container::NO_YIELD}, ["crbegin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["crend"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["data"] = {action = Library::Container::NO_ACTION, yield = Library::Container::BUFFER}, ["empty"] = {action = Library::Container::NO_ACTION, yield = Library::Container::EMPTY}, ["end"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["front"] = {action = Library::Container::NO_ACTION, yield = Library::Container::ITEM}, ["rbegin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["rend"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["resize"] = {action = Library::Container::RESIZE, yield = Library::Container::NO_YIELD}, ["size"] = {action = Library::Container::NO_ACTION, yield = Library::Container::SIZE}}, type_templateArgNo = 0, size_templateArgNo = 1, arrayLike_indexOp = true, stdStringLike = false}, ["stdBasicString"] = {startPattern = "std :: basic_string <", endPattern = "> !!::", functions = std::__debug::map with 21 elements = {["at"] = {action = Library::Container::NO_ACTION, yield = Library::Container::AT_INDEX}, ["back"] = {action = Library::Container::NO_ACTION, yield = Library::Container::ITEM}, ["begin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["c_str"] = {action = Library::Container::NO_ACTION, yield = Library::Container::BUFFER_NT}, ["cbegin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["cend"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["clear"] = {action = Library::Container::CLEAR, yield = Library::Container::NO_YIELD}, ["crbegin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["crend"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["data"] = {action = Library::Container::NO_ACTION, yield = Library::Container::BUFFER}, ["empty"] = {action = Library::Container::NO_ACTION, yield = Library::Container::EMPTY}, ["end"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["find"] = {action = Library::Container::FIND, yield = Library::Container::NO_YIELD}, ["front"] = {action = Library::Container::NO_ACTION, yield = Library::Container::ITEM}, ["length"] = {action = Library::Container::NO_ACTION, yield = Library::Container::SIZE}, ["pop_back"] = {action = Library::Container::POP, yield = Library::Container::NO_YIELD}, ["push_back"] = {action = Library::Container::PUSH, yield = Library::Container::NO_YIELD}, ["rbegin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["rend"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["resize"] = {action = Library::Container::RESIZE, yield = Library::Container::NO_YIELD}, ["size"] = {action = Library::Container::NO_ACTION, yield = Library::Container::SIZE}}, type_templateArgNo = 0, size_templateArgNo = -1, arrayLike_indexOp = true, stdStringLike = true}, ["stdContainer"] = {startPattern = "", endPattern = "> !!::", functions = std::__debug::map with 12 elements = {["begin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["cbegin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["cend"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["clear"] = {action = Library::Container::CLEAR, yield = Library::Container::NO_YIELD}, ["crbegin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["crend"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["empty"] = {action = Library::Container::NO_ACTION, yield = Library::Container::EMPTY}, ["end"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["rbegin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["rend"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["resize"] = {action = Library::Container::RESIZE, yield = Library::Container::NO_YIELD}, ["size"] = {action = Library::Container::NO_ACTION, yield = Library::Container::SIZE}}, type_templateArgNo = 0, size_templateArgNo = -1, arrayLike_indexOp = false, stdStringLike = false}, ["stdMap"] = {startPattern = "std :: map <", endPattern = "> !!::", functions = std::__debug::map with 14 elements = {["at"] = {action = Library::Container::NO_ACTION, yield = Library::Container::AT_INDEX}, ["begin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["cbegin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["cend"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["clear"] = {action = Library::Container::CLEAR, yield = Library::Container::NO_YIELD}, ["crbegin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["crend"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["empty"] = {action = Library::Container::NO_ACTION, yield = Library::Container::EMPTY}, ["end"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["find"] = {action = Library::Container::FIND, yield = Library::Container::NO_YIELD}, ["rbegin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["rend"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["resize"] = {action = Library::Container::RESIZE, yield = Library::Container::NO_YIELD}, ["size"] = {action = Library::Container::NO_ACTION, yield = Library::Container::SIZE}}, type_templateArgNo = 1, size_templateArgNo = -1, arrayLike_indexOp = false, stdStringLike = false}, ["stdSet"] = {startPattern = "std :: set <", endPattern = "> !!::", functions = std::__debug::map with 13 elements = {["begin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["cbegin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["cend"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["clear"] = {action = Library::Container::CLEAR, yield = Library::Container::NO_YIELD}, ["crbegin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["crend"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["empty"] = {action = Library::Container::NO_ACTION, yield = Library::Container::EMPTY}, ["end"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["find"] = {action = Library::Container::FIND, yield = Library::Container::NO_YIELD}, ["rbegin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["rend"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["resize"] = {action = Library::Container::RESIZE, yield = Library::Container::NO_YIELD}, ["size"] = {action = Library::Container::NO_ACTION, yield = Library::Container::SIZE}}, type_templateArgNo = 0, size_templateArgNo = -1, arrayLike_indexOp = false, stdStringLike = false}, ["stdString"] = {startPattern = "std :: string|wstring|u16string|u32string", endPattern = "", functions = std::__debug::map with 21 elements = {["at"] = {action = Library::Container::NO_ACTION, yield = Library::Container::AT_INDEX}, ["back"] = {action = Library::Container::NO_ACTION, yield = Library::Container::ITEM}, ["begin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["c_str"] = {action = Library::Container::NO_ACTION, yield = Library::Container::BUFFER_NT}, ["cbegin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["cend"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["clear"] = {action = Library::Container::CLEAR, yield = Library::Container::NO_YIELD}, ["crbegin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["crend"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["data"] = {action = Library::Container::NO_ACTION, yield = Library::Container::BUFFER}, ["empty"] = {action = Library::Container::NO_ACTION, yield = Library::Container::EMPTY}, ["end"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["find"] = {action = Library::Container::FIND, yield = Library::Container::NO_YIELD}, ["front"] = {action = Library::Container::NO_ACTION, yield = Library::Container::ITEM}, ["length"] = {action = Library::Container::NO_ACTION, yield = Library::Container::SIZE}, ["pop_back"] = {action = Library::Container::POP, yield = Library::Container::NO_YIELD}, ["push_back"] = {action = Library::Container::PUSH, yield = Library::Container::NO_YIELD}, ["rbegin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["rend"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["resize"] = {action = Library::Container::RESIZE, yield = Library::Container::NO_YIELD}, ["size"] = {action = Library::Container::NO_ACTION, yield = Library::Container::SIZE}}, type_templateArgNo = 0, size_templateArgNo = -1, arrayLike_indexOp = true, stdStringLike = true}, ["stdVectorDeque"] = {startPattern = "std :: vector|deque <", endPattern = "> !!::", functions = std::__debug::map with 20 elements = {["at"] = {action = Library::Container::NO_ACTION, yield = Library::Container::AT_INDEX}, ["back"] = {action = Library::Container::NO_ACTION, yield = Library::Container::ITEM}, ["begin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["cbegin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["cend"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["clear"] = {action = Library::Container::CLEAR, yield = Library::Container::NO_YIELD}, ["crbegin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["crend"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["data"] = {action = Library::Container::NO_ACTION, yield = Library::Container::BUFFER}, ["empty"] = {action = Library::Container::NO_ACTION, yield = Library::Container::EMPTY}, ["end"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["front"] = {action = Library::Container::NO_ACTION, yield = Library::Container::ITEM}, ["pop_back"] = {action = Library::Container::POP, yield = Library::Container::NO_YIELD}, ["pop_front"] = {action = Library::Container::POP, yield = Library::Container::NO_YIELD}, ["push_back"] = {action = Library::Container::PUSH, yield = Library::Container::NO_YIELD}, ["push_front"] = {action = Library::Container::PUSH, yield = Library::Container::NO_YIELD}, ["rbegin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["rend"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["resize"] = {action = Library::Container::RESIZE, yield = Library::Container::NO_YIELD}, ["size"] = {action = Library::Container::NO_ACTION, yield = Library::Container::SIZE}}, type_templateArgNo = 0, size_templateArgNo = -1, arrayLike_indexOp = true, stdStringLike = false}}, argumentChecks = std::__debug::map with 174 elements = {["abs"] = std::__debug::map with 1 elements = {[1] = {notbool = true, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["acos"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["alloca"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["asctime"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["asin"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["atan"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["atan2"] = std::__debug::map with 2 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["atexit"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = true, notuninit = false, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["atof"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["atoi"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["atol"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["atoll"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["bsearch"] = std::__debug::map with 5 elements = {[1] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [3] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [4] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [5] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["calloc"] = std::__debug::map with 2 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["ceil"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["clearerr"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["cos"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["cosh"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["ctime"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["difftime"] = std::__debug::map with 2 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["div"] = std::__debug::map with 2 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["exit"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["exp"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["fabs"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["fclose"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["feof"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["ferror"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["fflush"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["fgetc"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["fgetpos"] = std::__debug::map with 2 elements = {[1] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["fgets"] = std::__debug::map with 3 elements = {[1] = {notbool = false, notnull = true, notuninit = false, formatstr = false, strz = false, valid = "", minsizes = std::__debug::list = {[0] = {type = Library::ArgumentChecks::MinSize::ARGVALUE, arg = 2, arg2 = 0}}}, [2] = {notbool = true, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "0:", minsizes = empty std::__debug::list}, [3] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["fgetwc"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["floor"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["fmod"] = std::__debug::map with 2 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["fnprintf"] = std::__debug::map with 1 elements = {[3] = {notbool = false, notnull = false, notuninit = false, formatstr = true, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["fopen"] = std::__debug::map with 2 elements = {[1] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["fprintf"] = std::__debug::map with 3 elements = {[-1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [1] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = false, notuninit = false, formatstr = true, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["fputc"] = std::__debug::map with 2 elements = {[1] = {notbool = true, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "0:", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["fputs"] = std::__debug::map with 2 elements = {[1] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["fputwc"] = std::__debug::map with 2 elements = {[1] = {notbool = true, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["fputws"] = std::__debug::map with 2 elements = {[1] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["fread"] = std::__debug::map with 4 elements = {[1] = {notbool = false, notnull = true, notuninit = false, formatstr = false, strz = false, valid = "", minsizes = std::__debug::list = {[0] = {type = Library::ArgumentChecks::MinSize::MUL, arg = 2, arg2 = 3}}}, [2] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [3] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [4] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["free"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["freopen"] = std::__debug::map with 3 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [3] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["frexp"] = std::__debug::map with 2 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = true, notuninit = false, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["fscanf"] = std::__debug::map with 2 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = false, notuninit = false, formatstr = true, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["fseek"] = std::__debug::map with 3 elements = {[1] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [3] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["fsetpos"] = std::__debug::map with 2 elements = {[1] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["ftell"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["fwprintf"] = std::__debug::map with 1 elements = {[2] = {notbool = false, notnull = false, notuninit = false, formatstr = true, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["fwrite"] = std::__debug::map with 4 elements = {[1] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = std::__debug::list = {[0] = {type = Library::ArgumentChecks::MinSize::MUL, arg = 2, arg2 = 3}}}, [2] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [3] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [4] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["fwscanf"] = std::__debug::map with 1 elements = {[2] = {notbool = false, notnull = false, notuninit = false, formatstr = true, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["getc"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["getenv"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["gets"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = true, notuninit = false, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["gmtime"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["isalnum"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = false, formatstr = false, strz = false, valid = "0:255", minsizes = empty std::__debug::list}}, ["isalpha"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = false, formatstr = false, strz = false, valid = "0:255", minsizes = empty std::__debug::list}}, ["isblank"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = false, formatstr = false, strz = false, valid = "0:255", minsizes = empty std::__debug::list}}, ["iscntrl"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = false, formatstr = false, strz = false, valid = "0:255", minsizes = empty std::__debug::list}}, ["isdigit"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = false, formatstr = false, strz = false, valid = "0:255", minsizes = empty std::__debug::list}}, ["isgraph"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = false, formatstr = false, strz = false, valid = "0:255", minsizes = empty std::__debug::list}}, ["islower"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = false, formatstr = false, strz = false, valid = "0:255", minsizes = empty std::__debug::list}}, ["isprint"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = false, formatstr = false, strz = false, valid = "0:255", minsizes = empty std::__debug::list}}, ["ispunct"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = false, formatstr = false, strz = false, valid = "0:255", minsizes = empty std::__debug::list}}, ["isspace"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = false, formatstr = false, strz = false, valid = "0:255", minsizes = empty std::__debug::list}}, ["isupper"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = false, formatstr = false, strz = false, valid = "0:255", minsizes = empty std::__debug::list}}, ["isxdigit"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = false, formatstr = false, strz = false, valid = "0:255", minsizes = empty std::__debug::list}}, ["itoa"] = std::__debug::map with 2 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = true, notuninit = false, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["labs"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["ldexp"] = std::__debug::map with 2 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["ldiv"] = std::__debug::map with 2 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["llabs"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["lldiv"] = std::__debug::map with 2 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["localtime"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["log"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["log10"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["longjmp"] = std::__debug::map with 2 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["malloc"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["mblen"] = std::__debug::map with 2 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["mbstowcs"] = std::__debug::map with 2 elements = {[2] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [3] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["mbtowc"] = std::__debug::map with 2 elements = {[2] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [3] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["memchr"] = std::__debug::map with 3 elements = {[1] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = std::__debug::list = {[0] = {type = Library::ArgumentChecks::MinSize::ARGVALUE, arg = 3, arg2 = 0}}}, [2] = {notbool = true, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "0:", minsizes = empty std::__debug::list}, [3] = {notbool = true, notnull = false, notuninit = false, formatstr = false, strz = false, valid = "0:", minsizes = empty std::__debug::list}}, ["memcmp"] = std::__debug::map with 3 elements = {[1] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = std::__debug::list = {[0] = {type = Library::ArgumentChecks::MinSize::ARGVALUE, arg = 3, arg2 = 0}}}, [2] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = std::__debug::list = {[0] = {type = Library::ArgumentChecks::MinSize::ARGVALUE, arg = 3, arg2 = 0}}}, [3] = {notbool = true, notnull = false, notuninit = false, formatstr = false, strz = false, valid = "0:", minsizes = empty std::__debug::list}}, ["memcpy"] = std::__debug::map with 3 elements = {[1] = {notbool = false, notnull = true, notuninit = false, formatstr = false, strz = false, valid = "", minsizes = std::__debug::list = {[0] = {type = Library::ArgumentChecks::MinSize::ARGVALUE, arg = 3, arg2 = 0}}}, [2] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = std::__debug::list = {[0] = {type = Library::ArgumentChecks::MinSize::ARGVALUE, arg = 3, arg2 = 0}}}, [3] = {notbool = true, notnull = false, notuninit = false, formatstr = false, strz = false, valid = "0:", minsizes = empty std::__debug::list}}, ["memmove"] = std::__debug::map with 3 elements = {[1] = {notbool = false, notnull = true, notuninit = false, formatstr = false, strz = false, valid = "", minsizes = std::__debug::list = {[0] = {type = Library::ArgumentChecks::MinSize::ARGVALUE, arg = 3, arg2 = 0}}}, [2] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = std::__debug::list = {[0] = {type = Library::ArgumentChecks::MinSize::ARGVALUE, arg = 3, arg2 = 0}}}, [3] = {notbool = true, notnull = false, notuninit = false, formatstr = false, strz = false, valid = "0:", minsizes = empty std::__debug::list}}, ["memset"] = std::__debug::map with 3 elements = {[1] = {notbool = false, notnull = true, notuninit = false, formatstr = false, strz = false, valid = "", minsizes = std::__debug::list = {[0] = {type = Library::ArgumentChecks::MinSize::ARGVALUE, arg = 3, arg2 = 0}}}, [2] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [3] = {notbool = true, notnull = false, notuninit = false, formatstr = false, strz = false, valid = "0:", minsizes = empty std::__debug::list}}, ["mktime"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["modf"] = std::__debug::map with 2 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = true, notuninit = false, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["perror"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["pow"] = std::__debug::map with 2 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["printf"] = std::__debug::map with 2 elements = {[-1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [1] = {notbool = false, notnull = false, notuninit = false, formatstr = true, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["putc"] = std::__debug::map with 2 elements = {[1] = {notbool = true, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "0:", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["putchar"] = std::__debug::map with 1 elements = {[1] = {notbool = true, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "0:", minsizes = empty std::__debug::list}}, ["puts"] = std::__debug::map with 1 elements = {[1] = {notbool = true, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "0:", minsizes = empty std::__debug::list}}, ["putwc"] = std::__debug::map with 2 elements = {[1] = {notbool = true, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["qsort"] = std::__debug::map with 4 elements = {[1] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [3] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [4] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["realloc"] = std::__debug::map with 1 elements = {[2] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["remove"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["rename"] = std::__debug::map with 2 elements = {[1] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}...}, returnuninitdata = std::__debug::set with 1 elements = {[0] = "malloc"}, defines = std::__debug::vector of length 0, capacity 0, allocid = 3, _files = std::__debug::set with 1 elements = {[0] = "/home/martin/cppcheck/cfg/std.cfg"}, _alloc = std::__debug::map with 5 elements = {["calloc"] = 2, ["fopen"] = 3, ["freopen"] = 3, ["malloc"] = 2, ["tmpfile"] = 3}, _dealloc = std::__debug::map with 2 elements = {["fclose"] = 3, ["free"] = 2}, _noreturn = std::__debug::map with 185 elements = {["abort"] = true, ["abs"] = false, ["acos"] = false, ["alloca"] = false, ["asctime"] = false, ["asin"] = false, ["atan"] = false, ["atan2"] = false, ["atexit"] = false, ["atof"] = false, ["atoi"] = false, ["atol"] = false, ["atoll"] = false, ["bsearch"] = false, ["calloc"] = false, ["ceil"] = false, ["clearerr"] = false, ["clock"] = false, ["cos"] = false, ["cosh"] = false, ["ctime"] = false, ["difftime"] = false, ["div"] = false, ["exit"] = true, ["exp"] = false, ["fabs"] = false, ["fclose"] = false, ["feof"] = false, ["ferror"] = false, ["fflush"] = false, ["fgetc"] = false, ["fgetpos"] = false, ["fgets"] = false, ["fgetwc"] = false, ["floor"] = false, ["fmod"] = false, ["fnprintf"] = false, ["fopen"] = false, ["fprintf"] = false, ["fputc"] = false, ["fputs"] = false, ["fputwc"] = false, ["fputws"] = false, ["fread"] = false, ["free"] = false, ["freopen"] = false, ["frexp"] = false, ["fscanf"] = false, ["fseek"] = false, ["fsetpos"] = false, ["ftell"] = false, ["fwprintf"] = false, ["fwrite"] = false, ["fwscanf"] = false, ["getc"] = false, ["getchar"] = false, ["getenv"] = false, ["gets"] = false, ["gmtime"] = false, ["isalnum"] = false, ["isalpha"] = false, ["isblank"] = false, ["iscntrl"] = false, ["isdigit"] = false, ["isgraph"] = false, ["islower"] = false, ["isprint"] = false, ["ispunct"] = false, ["isspace"] = false, ["isupper"] = false, ["isxdigit"] = false, ["itoa"] = false, ["labs"] = false, ["ldexp"] = false, ["ldiv"] = false, ["llabs"] = false, ["lldiv"] = false, ["localtime"] = false, ["log"] = false, ["log10"] = false, ["longjmp"] = false, ["malloc"] = false, ["mblen"] = false, ["mbstowcs"] = false, ["mbtowc"] = false, ["memchr"] = false, ["memcmp"] = false, ["memcpy"] = false, ["memmove"] = false, ["memset"] = false, ["mktime"] = false, ["modf"] = false, ["perror"] = false, ["pow"] = false, ["printf"] = false, ["putc"] = false, ["putchar"] = false, ["puts"] = false, ["putwc"] = false, ["qsort"] = false...}, _ignorefunction = std::__debug::set with 0 elements, _reporterrors = std::__debug::map with 0 elements, _processAfterCode = std::__debug::map with 0 elements, _markupExtensions = std::__debug::set with 0 elements, _keywords = std::__debug::map with 0 elements, _executableblocks = std::__debug::map with 0 elements, _exporters = std::__debug::map with 0 elements, _importers = std::__debug::map with 0 elements, _reflection = std::__debug::map with 0 elements, _formatstr = std::__debug::map with 21 elements = {["fnprintf"] = {first = false, second = false}, ["fprintf"] = {first = false, second = false}, ["fscanf"] = {first = true, second = false}, ["fwprintf"] = {first = false, second = false}, ["fwscanf"] = {first = true, second = false}, ["printf"] = {first = false, second = false}, ["scanf"] = {first = true, second = false}, ["snprintf"] = {first = false, second = false}, ["sprintf"] = {first = false, second = false}, ["sscanf"] = {first = true, second = false}, ["swscanf"] = {first = true, second = false}, ["vfprintf"] = {first = false, second = false}, ["vfscanf"] = {first = true, second = false}, ["vfwprintf"] = {first = false, second = false}, ["vprintf"] = {first = false, second = false}, ["vscanf"] = {first = true, second = false}, ["vsnprintf"] = {first = false, second = false}, ["vsprintf"] = {first = false, second = false}, ["vwprintf"] = {first = false, second = false}, ["wprintf"] = {first = false, second = false}, ["wscanf"] = {first = true, second = false}}, podtypes = std::__debug::map with 20 elements = {["double_t"] = {size = 0, sign = 0 '\000'}, ["float_t"] = {size = 0, sign = 0 '\000'}, ["int16_t"] = {size = 0, sign = 115 's'}, ["int32_t"] = {size = 0, sign = 115 's'}, ["int64_t"] = {size = 0, sign = 115 's'}, ["int8_t"] = {size = 0, sign = 115 's'}, ["int_fast16_t"] = {size = 0, sign = 115 's'}, ["int_fast32_t"] = {size = 0, sign = 115 's'}, ["int_fast64_t"] = {size = 0, sign = 115 's'}, ["int_fast8_t"] = {size = 0, sign = 115 's'}, ["intptr_t"] = {size = 0, sign = 115 's'}, ["uint16_t"] = {size = 0, sign = 117 'u'}, ["uint32_t"] = {size = 0, sign = 117 'u'}, ["uint64_t"] = {size = 0, sign = 117 'u'}, ["uint8_t"] = {size = 0, sign = 117 'u'}, ["uint_fast16_t"] = {size = 0, sign = 117 'u'}, ["uint_fast32_t"] = {size = 0, sign = 117 'u'}, ["uint_fast64_t"] = {size = 0, sign = 117 'u'}, ["uint_fast8_t"] = {size = 0, sign = 117 'u'}, ["uintptr_t"] = {size = 0, sign = 117 'u'}}, platform_types = std::__debug::map with 0 elements, platforms = std::__debug::map with 0 elements}, rules = empty std::__debug::list, checkConfiguration = false, checkLibrary = false, standards = {c = Standards::C11, cpp = Standards::CPP11, posix = false}, sizeof_bool = 1, sizeof_short = 2, sizeof_int = 4, sizeof_long = 4, sizeof_long_long = 8, sizeof_float = 4, sizeof_double = 8, sizeof_long_double = 12, sizeof_wchar_t = 4, sizeof_size_t = 4, sizeof_pointer = 4, platformType = Settings::Unspecified}, _errorLogger = @0xbfffefa8, cfg = "", exitcode = 0, _useGlobalSuppressions = true, tooManyConfigs = false, _simplify = true, fileInfo = empty std::__debug::list}
        settings = @0xbfffea2c: {_append = "", _enabled = std::__debug::set with 0 elements, _terminate = false, debug = false, debugwarnings = false, debugFalsePositive = false, dump = false, exceptionHandling = false, inconclusive = false, experimental = false, _errorsOnly = false, _inlineSuppressions = false, _verbose = false, _force = false, _relativePaths = false, _basePaths = std::__debug::vector of length 0, capacity 0, _xml = false, _xml_version = 1, _jobs = 1, _loadAverage = 0, _exitCode = 0, _outputFormat = "", _showtime = SHOWTIME_NONE, _includePaths = empty std::__debug::list, _maxConfigs = 12, enforcedLang = Settings::None, nomsg = {_suppressions = std::__debug::map with 0 elements}, nofail = {_suppressions = std::__debug::map with 0 elements}, userDefines = "", userUndefs = std::__debug::set with 0 elements, userIncludes = empty std::__debug::list, configExcludePaths = std::__debug::set with 0 elements, reportProgress = false, library = {use = std::__debug::set with 0 elements, leakignore = std::__debug::set with 175 elements = {[0] = "abs", [1] = "acos", [2] = "asctime", [3] = "asin", [4] = "assert", [5] = "atan", [6] = "atan2", [7] = "atexit", [8] = "atof", [9] = "atoi", [10] = "atol", [11] = "atoll", [12] = "bsearch", [13] = "ceil", [14] = "clearerr", [15] = "clock", [16] = "cos", [17] = "cosh", [18] = "ctime", [19] = "difftime", [20] = "div", [21] = "exp", [22] = "fabs", [23] = "feof", [24] = "ferror", [25] = "fflush", [26] = "fgetc", [27] = "fgetpos", [28] = "fgets", [29] = "fgetwc", [30] = "floor", [31] = "fmod", [32] = "fnprintf", [33] = "fprintf", [34] = "fputc", [35] = "fputs", [36] = "fputwc", [37] = "fputws", [38] = "fread", [39] = "frexp", [40] = "fscanf", [41] = "fseek", [42] = "fsetpos", [43] = "ftell", [44] = "fwprintf", [45] = "fwrite", [46] = "fwscanf", [47] = "getc", [48] = "getchar", [49] = "getenv", [50] = "gets", [51] = "gmtime", [52] = "isalnum", [53] = "isalpha", [54] = "isblank", [55] = "iscntrl", [56] = "isdigit", [57] = "isgraph", [58] = "islower", [59] = "isprint", [60] = "ispunct", [61] = "isspace", [62] = "isupper", [63] = "isxdigit", [64] = "itoa", [65] = "labs", [66] = "ldexp", [67] = "ldiv", [68] = "llabs", [69] = "lldiv", [70] = "localtime", [71] = "log", [72] = "log10", [73] = "longjmp", [74] = "mblen", [75] = "mbstowcs", [76] = "mbtowc", [77] = "memchr", [78] = "memcmp", [79] = "memcpy", [80] = "memmove", [81] = "memset", [82] = "mktime", [83] = "modf", [84] = "perror", [85] = "pow", [86] = "printf", [87] = "putc", [88] = "putchar", [89] = "puts", [90] = "putwc", [91] = "qsort", [92] = "rand", [93] = "remove", [94] = "rename", [95] = "rewind", [96] = "round", [97] = "scanf", [98] = "setbuf", [99] = "setjmp", [100] = "setvbuf", [101] = "snprintf", [102] = "sprintf", [103] = "srand", [104] = "sscanf", [105] = "strbprk", [106] = "strcat", [107] = "strchr", [108] = "strcmp", [109] = "strcoll", [110] = "strcpy", [111] = "strcspn", [112] = "strerror", [113] = "strftime", [114] = "strlen", [115] = "strncat", [116] = "strncmp", [117] = "strncpy", [118] = "strrchr", [119] = "strspn", [120] = "strstr", [121] = "strtod", [122] = "strtof", [123] = "strtok", [124] = "strtol", [125] = "strtold", [126] = "strtoll", [127] = "strtoul", [128] = "strtoull", [129] = "strxfrm", [130] = "swscanf", [131] = "time", [132] = "tmpnam", [133] = "tolower", [134] = "toupper", [135] = "ungetc", [136] = "ungetwc", [137] = "va_arg", [138] = "va_copy", [139] = "va_end", [140] = "va_start", [141] = "vfprintf", [142] = "vfscanf", [143] = "vfwprintf", [144] = "vprintf", [145] = "vscanf", [146] = "vsnprintf", [147] = "vsprintf", [148] = "vwprintf", [149] = "wcscat", [150] = "wcschr", [151] = "wcscmp", [152] = "wcscoll", [153] = "wcscpy", [154] = "wcscspn", [155] = "wcslen", [156] = "wcsncat", [157] = "wcsncmp", [158] = "wcsncpy", [159] = "wcspbrk", [160] = "wcsrchr", [161] = "wcsspn", [162] = "wcsstr", [163] = "wcstod", [164] = "wcstof", [165] = "wcstol", [166] = "wcstold", [167] = "wcstoll", [168] = "wcstombs", [169] = "wcstoul", [170] = "wcstoull", [171] = "wcsxfrm", [172] = "wctomb", [173] = "wprintf", [174] = "wscanf"}, functionconst = std::__debug::set with 0 elements, functionpure = std::__debug::set with 44 elements = {[0] = "abs", [1] = "acos", [2] = "asin", [3] = "atan", [4] = "atan2", [5] = "atexit", [6] = "atof", [7] = "atoi", [8] = "atol", [9] = "atoll", [10] = "bsearch", [11] = "ceil", [12] = "cos", [13] = "cosh", [14] = "div", [15] = "exp", [16] = "fabs", [17] = "floor", [18] = "fmod", [19] = "isalnum", [20] = "isalpha", [21] = "isblank", [22] = "iscntrl", [23] = "isdigit", [24] = "isgraph", [25] = "islower", [26] = "isprint", [27] = "ispunct", [28] = "isspace", [29] = "isupper", [30] = "isxdigit", [31] = "labs", [32] = "ldexp", [33] = "ldiv", [34] = "llabs", [35] = "lldiv", [36] = "memchr", [37] = "memcmp", [38] = "pow", [39] = "round", [40] = "strbprk", [41] = "strcmp", [42] = "strtok", [43] = "wcscmp"}, useretval = std::__debug::set with 88 elements = {[0] = "abs", [1] = "acos", [2] = "alloca", [3] = "asctime", [4] = "asin", [5] = "atan", [6] = "atan2", [7] = "atof", [8] = "atoi", [9] = "atol", [10] = "atoll", [11] = "bsearch", [12] = "calloc", [13] = "ceil", [14] = "cos", [15] = "cosh", [16] = "ctime", [17] = "difftime", [18] = "exp", [19] = "fabs", [20] = "feof", [21] = "ferror", [22] = "floor", [23] = "fmod", [24] = "fopen", [25] = "getenv", [26] = "gmtime", [27] = "isalnum", [28] = "isalpha", [29] = "isblank", [30] = "iscntrl", [31] = "isdigit", [32] = "isgraph", [33] = "islower", [34] = "isprint", [35] = "ispunct", [36] = "isspace", [37] = "isupper", [38] = "isxdigit", [39] = "labs", [40] = "ldexp", [41] = "llabs", [42] = "log10", [43] = "malloc", [44] = "mblen", [45] = "memchr", [46] = "memcmp", [47] = "pow", [48] = "rand", [49] = "round", [50] = "strbprk", [51] = "strchr", [52] = "strcmp", [53] = "strcoll", [54] = "strcspn", [55] = "strerror", [56] = "strlen", [57] = "strncmp", [58] = "strrchr", [59] = "strspn", [60] = "strstr", [61] = "strtod", [62] = "strtof", [63] = "strtol", [64] = "strtold", [65] = "strtoll", [66] = "strtoul", [67] = "strtoull", [68] = "tmpfile", [69] = "tolower", [70] = "toupper", [71] = "wcschr", [72] = "wcscmp", [73] = "wcscoll", [74] = "wcscspn", [75] = "wcslen", [76] = "wcsncmp", [77] = "wcspbrk", [78] = "wcsrchr", [79] = "wcsspn", [80] = "wcsstr", [81] = "wcstod", [82] = "wcstof", [83] = "wcstol", [84] = "wcstold", [85] = "wcstoll", [86] = "wcstoul", [87] = "wcstoull"}, containers = std::__debug::map with 8 elements = {["stdAllString"] = {startPattern = "", endPattern = "> !!::", functions = std::__debug::map with 21 elements = {["at"] = {action = Library::Container::NO_ACTION, yield = Library::Container::AT_INDEX}, ["back"] = {action = Library::Container::NO_ACTION, yield = Library::Container::ITEM}, ["begin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["c_str"] = {action = Library::Container::NO_ACTION, yield = Library::Container::BUFFER_NT}, ["cbegin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["cend"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["clear"] = {action = Library::Container::CLEAR, yield = Library::Container::NO_YIELD}, ["crbegin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["crend"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["data"] = {action = Library::Container::NO_ACTION, yield = Library::Container::BUFFER}, ["empty"] = {action = Library::Container::NO_ACTION, yield = Library::Container::EMPTY}, ["end"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["find"] = {action = Library::Container::FIND, yield = Library::Container::NO_YIELD}, ["front"] = {action = Library::Container::NO_ACTION, yield = Library::Container::ITEM}, ["length"] = {action = Library::Container::NO_ACTION, yield = Library::Container::SIZE}, ["pop_back"] = {action = Library::Container::POP, yield = Library::Container::NO_YIELD}, ["push_back"] = {action = Library::Container::PUSH, yield = Library::Container::NO_YIELD}, ["rbegin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["rend"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["resize"] = {action = Library::Container::RESIZE, yield = Library::Container::NO_YIELD}, ["size"] = {action = Library::Container::NO_ACTION, yield = Library::Container::SIZE}}, type_templateArgNo = 0, size_templateArgNo = -1, arrayLike_indexOp = true, stdStringLike = true}, ["stdArray"] = {startPattern = "std :: array <", endPattern = "> !!::", functions = std::__debug::map with 16 elements = {["at"] = {action = Library::Container::NO_ACTION, yield = Library::Container::AT_INDEX}, ["back"] = {action = Library::Container::NO_ACTION, yield = Library::Container::ITEM}, ["begin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["cbegin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["cend"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["clear"] = {action = Library::Container::CLEAR, yield = Library::Container::NO_YIELD}, ["crbegin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["crend"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["data"] = {action = Library::Container::NO_ACTION, yield = Library::Container::BUFFER}, ["empty"] = {action = Library::Container::NO_ACTION, yield = Library::Container::EMPTY}, ["end"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["front"] = {action = Library::Container::NO_ACTION, yield = Library::Container::ITEM}, ["rbegin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["rend"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["resize"] = {action = Library::Container::RESIZE, yield = Library::Container::NO_YIELD}, ["size"] = {action = Library::Container::NO_ACTION, yield = Library::Container::SIZE}}, type_templateArgNo = 0, size_templateArgNo = 1, arrayLike_indexOp = true, stdStringLike = false}, ["stdBasicString"] = {startPattern = "std :: basic_string <", endPattern = "> !!::", functions = std::__debug::map with 21 elements = {["at"] = {action = Library::Container::NO_ACTION, yield = Library::Container::AT_INDEX}, ["back"] = {action = Library::Container::NO_ACTION, yield = Library::Container::ITEM}, ["begin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["c_str"] = {action = Library::Container::NO_ACTION, yield = Library::Container::BUFFER_NT}, ["cbegin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["cend"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["clear"] = {action = Library::Container::CLEAR, yield = Library::Container::NO_YIELD}, ["crbegin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["crend"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["data"] = {action = Library::Container::NO_ACTION, yield = Library::Container::BUFFER}, ["empty"] = {action = Library::Container::NO_ACTION, yield = Library::Container::EMPTY}, ["end"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["find"] = {action = Library::Container::FIND, yield = Library::Container::NO_YIELD}, ["front"] = {action = Library::Container::NO_ACTION, yield = Library::Container::ITEM}, ["length"] = {action = Library::Container::NO_ACTION, yield = Library::Container::SIZE}, ["pop_back"] = {action = Library::Container::POP, yield = Library::Container::NO_YIELD}, ["push_back"] = {action = Library::Container::PUSH, yield = Library::Container::NO_YIELD}, ["rbegin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["rend"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["resize"] = {action = Library::Container::RESIZE, yield = Library::Container::NO_YIELD}, ["size"] = {action = Library::Container::NO_ACTION, yield = Library::Container::SIZE}}, type_templateArgNo = 0, size_templateArgNo = -1, arrayLike_indexOp = true, stdStringLike = true}, ["stdContainer"] = {startPattern = "", endPattern = "> !!::", functions = std::__debug::map with 12 elements = {["begin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["cbegin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["cend"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["clear"] = {action = Library::Container::CLEAR, yield = Library::Container::NO_YIELD}, ["crbegin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["crend"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["empty"] = {action = Library::Container::NO_ACTION, yield = Library::Container::EMPTY}, ["end"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["rbegin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["rend"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["resize"] = {action = Library::Container::RESIZE, yield = Library::Container::NO_YIELD}, ["size"] = {action = Library::Container::NO_ACTION, yield = Library::Container::SIZE}}, type_templateArgNo = 0, size_templateArgNo = -1, arrayLike_indexOp = false, stdStringLike = false}, ["stdMap"] = {startPattern = "std :: map <", endPattern = "> !!::", functions = std::__debug::map with 14 elements = {["at"] = {action = Library::Container::NO_ACTION, yield = Library::Container::AT_INDEX}, ["begin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["cbegin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["cend"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["clear"] = {action = Library::Container::CLEAR, yield = Library::Container::NO_YIELD}, ["crbegin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["crend"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["empty"] = {action = Library::Container::NO_ACTION, yield = Library::Container::EMPTY}, ["end"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["find"] = {action = Library::Container::FIND, yield = Library::Container::NO_YIELD}, ["rbegin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["rend"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["resize"] = {action = Library::Container::RESIZE, yield = Library::Container::NO_YIELD}, ["size"] = {action = Library::Container::NO_ACTION, yield = Library::Container::SIZE}}, type_templateArgNo = 1, size_templateArgNo = -1, arrayLike_indexOp = false, stdStringLike = false}, ["stdSet"] = {startPattern = "std :: set <", endPattern = "> !!::", functions = std::__debug::map with 13 elements = {["begin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["cbegin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["cend"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["clear"] = {action = Library::Container::CLEAR, yield = Library::Container::NO_YIELD}, ["crbegin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["crend"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["empty"] = {action = Library::Container::NO_ACTION, yield = Library::Container::EMPTY}, ["end"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["find"] = {action = Library::Container::FIND, yield = Library::Container::NO_YIELD}, ["rbegin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["rend"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["resize"] = {action = Library::Container::RESIZE, yield = Library::Container::NO_YIELD}, ["size"] = {action = Library::Container::NO_ACTION, yield = Library::Container::SIZE}}, type_templateArgNo = 0, size_templateArgNo = -1, arrayLike_indexOp = false, stdStringLike = false}, ["stdString"] = {startPattern = "std :: string|wstring|u16string|u32string", endPattern = "", functions = std::__debug::map with 21 elements = {["at"] = {action = Library::Container::NO_ACTION, yield = Library::Container::AT_INDEX}, ["back"] = {action = Library::Container::NO_ACTION, yield = Library::Container::ITEM}, ["begin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["c_str"] = {action = Library::Container::NO_ACTION, yield = Library::Container::BUFFER_NT}, ["cbegin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["cend"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["clear"] = {action = Library::Container::CLEAR, yield = Library::Container::NO_YIELD}, ["crbegin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["crend"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["data"] = {action = Library::Container::NO_ACTION, yield = Library::Container::BUFFER}, ["empty"] = {action = Library::Container::NO_ACTION, yield = Library::Container::EMPTY}, ["end"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["find"] = {action = Library::Container::FIND, yield = Library::Container::NO_YIELD}, ["front"] = {action = Library::Container::NO_ACTION, yield = Library::Container::ITEM}, ["length"] = {action = Library::Container::NO_ACTION, yield = Library::Container::SIZE}, ["pop_back"] = {action = Library::Container::POP, yield = Library::Container::NO_YIELD}, ["push_back"] = {action = Library::Container::PUSH, yield = Library::Container::NO_YIELD}, ["rbegin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["rend"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["resize"] = {action = Library::Container::RESIZE, yield = Library::Container::NO_YIELD}, ["size"] = {action = Library::Container::NO_ACTION, yield = Library::Container::SIZE}}, type_templateArgNo = 0, size_templateArgNo = -1, arrayLike_indexOp = true, stdStringLike = true}, ["stdVectorDeque"] = {startPattern = "std :: vector|deque <", endPattern = "> !!::", functions = std::__debug::map with 20 elements = {["at"] = {action = Library::Container::NO_ACTION, yield = Library::Container::AT_INDEX}, ["back"] = {action = Library::Container::NO_ACTION, yield = Library::Container::ITEM}, ["begin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["cbegin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["cend"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["clear"] = {action = Library::Container::CLEAR, yield = Library::Container::NO_YIELD}, ["crbegin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["crend"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["data"] = {action = Library::Container::NO_ACTION, yield = Library::Container::BUFFER}, ["empty"] = {action = Library::Container::NO_ACTION, yield = Library::Container::EMPTY}, ["end"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["front"] = {action = Library::Container::NO_ACTION, yield = Library::Container::ITEM}, ["pop_back"] = {action = Library::Container::POP, yield = Library::Container::NO_YIELD}, ["pop_front"] = {action = Library::Container::POP, yield = Library::Container::NO_YIELD}, ["push_back"] = {action = Library::Container::PUSH, yield = Library::Container::NO_YIELD}, ["push_front"] = {action = Library::Container::PUSH, yield = Library::Container::NO_YIELD}, ["rbegin"] = {action = Library::Container::NO_ACTION, yield = Library::Container::START_ITERATOR}, ["rend"] = {action = Library::Container::NO_ACTION, yield = Library::Container::END_ITERATOR}, ["resize"] = {action = Library::Container::RESIZE, yield = Library::Container::NO_YIELD}, ["size"] = {action = Library::Container::NO_ACTION, yield = Library::Container::SIZE}}, type_templateArgNo = 0, size_templateArgNo = -1, arrayLike_indexOp = true, stdStringLike = false}}, argumentChecks = std::__debug::map with 174 elements = {["abs"] = std::__debug::map with 1 elements = {[1] = {notbool = true, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["acos"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["alloca"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["asctime"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["asin"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["atan"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["atan2"] = std::__debug::map with 2 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["atexit"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = true, notuninit = false, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["atof"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["atoi"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["atol"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["atoll"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["bsearch"] = std::__debug::map with 5 elements = {[1] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [3] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [4] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [5] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["calloc"] = std::__debug::map with 2 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["ceil"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["clearerr"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["cos"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["cosh"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["ctime"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["difftime"] = std::__debug::map with 2 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["div"] = std::__debug::map with 2 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["exit"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["exp"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["fabs"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["fclose"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["feof"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["ferror"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["fflush"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["fgetc"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["fgetpos"] = std::__debug::map with 2 elements = {[1] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["fgets"] = std::__debug::map with 3 elements = {[1] = {notbool = false, notnull = true, notuninit = false, formatstr = false, strz = false, valid = "", minsizes = std::__debug::list = {[0] = {type = Library::ArgumentChecks::MinSize::ARGVALUE, arg = 2, arg2 = 0}}}, [2] = {notbool = true, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "0:", minsizes = empty std::__debug::list}, [3] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["fgetwc"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["floor"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["fmod"] = std::__debug::map with 2 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["fnprintf"] = std::__debug::map with 1 elements = {[3] = {notbool = false, notnull = false, notuninit = false, formatstr = true, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["fopen"] = std::__debug::map with 2 elements = {[1] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["fprintf"] = std::__debug::map with 3 elements = {[-1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [1] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = false, notuninit = false, formatstr = true, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["fputc"] = std::__debug::map with 2 elements = {[1] = {notbool = true, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "0:", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["fputs"] = std::__debug::map with 2 elements = {[1] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["fputwc"] = std::__debug::map with 2 elements = {[1] = {notbool = true, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["fputws"] = std::__debug::map with 2 elements = {[1] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["fread"] = std::__debug::map with 4 elements = {[1] = {notbool = false, notnull = true, notuninit = false, formatstr = false, strz = false, valid = "", minsizes = std::__debug::list = {[0] = {type = Library::ArgumentChecks::MinSize::MUL, arg = 2, arg2 = 3}}}, [2] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [3] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [4] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["free"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["freopen"] = std::__debug::map with 3 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [3] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["frexp"] = std::__debug::map with 2 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = true, notuninit = false, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["fscanf"] = std::__debug::map with 2 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = false, notuninit = false, formatstr = true, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["fseek"] = std::__debug::map with 3 elements = {[1] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [3] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["fsetpos"] = std::__debug::map with 2 elements = {[1] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["ftell"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["fwprintf"] = std::__debug::map with 1 elements = {[2] = {notbool = false, notnull = false, notuninit = false, formatstr = true, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["fwrite"] = std::__debug::map with 4 elements = {[1] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = std::__debug::list = {[0] = {type = Library::ArgumentChecks::MinSize::MUL, arg = 2, arg2 = 3}}}, [2] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [3] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [4] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["fwscanf"] = std::__debug::map with 1 elements = {[2] = {notbool = false, notnull = false, notuninit = false, formatstr = true, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["getc"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["getenv"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["gets"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = true, notuninit = false, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["gmtime"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["isalnum"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = false, formatstr = false, strz = false, valid = "0:255", minsizes = empty std::__debug::list}}, ["isalpha"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = false, formatstr = false, strz = false, valid = "0:255", minsizes = empty std::__debug::list}}, ["isblank"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = false, formatstr = false, strz = false, valid = "0:255", minsizes = empty std::__debug::list}}, ["iscntrl"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = false, formatstr = false, strz = false, valid = "0:255", minsizes = empty std::__debug::list}}, ["isdigit"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = false, formatstr = false, strz = false, valid = "0:255", minsizes = empty std::__debug::list}}, ["isgraph"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = false, formatstr = false, strz = false, valid = "0:255", minsizes = empty std::__debug::list}}, ["islower"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = false, formatstr = false, strz = false, valid = "0:255", minsizes = empty std::__debug::list}}, ["isprint"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = false, formatstr = false, strz = false, valid = "0:255", minsizes = empty std::__debug::list}}, ["ispunct"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = false, formatstr = false, strz = false, valid = "0:255", minsizes = empty std::__debug::list}}, ["isspace"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = false, formatstr = false, strz = false, valid = "0:255", minsizes = empty std::__debug::list}}, ["isupper"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = false, formatstr = false, strz = false, valid = "0:255", minsizes = empty std::__debug::list}}, ["isxdigit"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = false, formatstr = false, strz = false, valid = "0:255", minsizes = empty std::__debug::list}}, ["itoa"] = std::__debug::map with 2 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = true, notuninit = false, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["labs"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["ldexp"] = std::__debug::map with 2 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["ldiv"] = std::__debug::map with 2 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["llabs"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["lldiv"] = std::__debug::map with 2 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["localtime"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["log"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["log10"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["longjmp"] = std::__debug::map with 2 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["malloc"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["mblen"] = std::__debug::map with 2 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["mbstowcs"] = std::__debug::map with 2 elements = {[2] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [3] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["mbtowc"] = std::__debug::map with 2 elements = {[2] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [3] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["memchr"] = std::__debug::map with 3 elements = {[1] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = std::__debug::list = {[0] = {type = Library::ArgumentChecks::MinSize::ARGVALUE, arg = 3, arg2 = 0}}}, [2] = {notbool = true, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "0:", minsizes = empty std::__debug::list}, [3] = {notbool = true, notnull = false, notuninit = false, formatstr = false, strz = false, valid = "0:", minsizes = empty std::__debug::list}}, ["memcmp"] = std::__debug::map with 3 elements = {[1] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = std::__debug::list = {[0] = {type = Library::ArgumentChecks::MinSize::ARGVALUE, arg = 3, arg2 = 0}}}, [2] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = std::__debug::list = {[0] = {type = Library::ArgumentChecks::MinSize::ARGVALUE, arg = 3, arg2 = 0}}}, [3] = {notbool = true, notnull = false, notuninit = false, formatstr = false, strz = false, valid = "0:", minsizes = empty std::__debug::list}}, ["memcpy"] = std::__debug::map with 3 elements = {[1] = {notbool = false, notnull = true, notuninit = false, formatstr = false, strz = false, valid = "", minsizes = std::__debug::list = {[0] = {type = Library::ArgumentChecks::MinSize::ARGVALUE, arg = 3, arg2 = 0}}}, [2] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = std::__debug::list = {[0] = {type = Library::ArgumentChecks::MinSize::ARGVALUE, arg = 3, arg2 = 0}}}, [3] = {notbool = true, notnull = false, notuninit = false, formatstr = false, strz = false, valid = "0:", minsizes = empty std::__debug::list}}, ["memmove"] = std::__debug::map with 3 elements = {[1] = {notbool = false, notnull = true, notuninit = false, formatstr = false, strz = false, valid = "", minsizes = std::__debug::list = {[0] = {type = Library::ArgumentChecks::MinSize::ARGVALUE, arg = 3, arg2 = 0}}}, [2] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = std::__debug::list = {[0] = {type = Library::ArgumentChecks::MinSize::ARGVALUE, arg = 3, arg2 = 0}}}, [3] = {notbool = true, notnull = false, notuninit = false, formatstr = false, strz = false, valid = "0:", minsizes = empty std::__debug::list}}, ["memset"] = std::__debug::map with 3 elements = {[1] = {notbool = false, notnull = true, notuninit = false, formatstr = false, strz = false, valid = "", minsizes = std::__debug::list = {[0] = {type = Library::ArgumentChecks::MinSize::ARGVALUE, arg = 3, arg2 = 0}}}, [2] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [3] = {notbool = true, notnull = false, notuninit = false, formatstr = false, strz = false, valid = "0:", minsizes = empty std::__debug::list}}, ["mktime"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["modf"] = std::__debug::map with 2 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = true, notuninit = false, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["perror"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["pow"] = std::__debug::map with 2 elements = {[1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["printf"] = std::__debug::map with 2 elements = {[-1] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [1] = {notbool = false, notnull = false, notuninit = false, formatstr = true, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["putc"] = std::__debug::map with 2 elements = {[1] = {notbool = true, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "0:", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["putchar"] = std::__debug::map with 1 elements = {[1] = {notbool = true, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "0:", minsizes = empty std::__debug::list}}, ["puts"] = std::__debug::map with 1 elements = {[1] = {notbool = true, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "0:", minsizes = empty std::__debug::list}}, ["putwc"] = std::__debug::map with 2 elements = {[1] = {notbool = true, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["qsort"] = std::__debug::map with 4 elements = {[1] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [3] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [4] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["realloc"] = std::__debug::map with 1 elements = {[2] = {notbool = false, notnull = false, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["remove"] = std::__debug::map with 1 elements = {[1] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}, ["rename"] = std::__debug::map with 2 elements = {[1] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}, [2] = {notbool = false, notnull = true, notuninit = true, formatstr = false, strz = false, valid = "", minsizes = empty std::__debug::list}}...}, returnuninitdata = std::__debug::set with 1 elements = {[0] = "malloc"}, defines = std::__debug::vector of length 0, capacity 0, allocid = 3, _files = std::__debug::set with 1 elements = {[0] = "/home/martin/cppcheck/cfg/std.cfg"}, _alloc = std::__debug::map with 5 elements = {["calloc"] = 2, ["fopen"] = 3, ["freopen"] = 3, ["malloc"] = 2, ["tmpfile"] = 3}, _dealloc = std::__debug::map with 2 elements = {["fclose"] = 3, ["free"] = 2}, _noreturn = std::__debug::map with 185 elements = {["abort"] = true, ["abs"] = false, ["acos"] = false, ["alloca"] = false, ["asctime"] = false, ["asin"] = false, ["atan"] = false, ["atan2"] = false, ["atexit"] = false, ["atof"] = false, ["atoi"] = false, ["atol"] = false, ["atoll"] = false, ["bsearch"] = false, ["calloc"] = false, ["ceil"] = false, ["clearerr"] = false, ["clock"] = false, ["cos"] = false, ["cosh"] = false, ["ctime"] = false, ["difftime"] = false, ["div"] = false, ["exit"] = true, ["exp"] = false, ["fabs"] = false, ["fclose"] = false, ["feof"] = false, ["ferror"] = false, ["fflush"] = false, ["fgetc"] = false, ["fgetpos"] = false, ["fgets"] = false, ["fgetwc"] = false, ["floor"] = false, ["fmod"] = false, ["fnprintf"] = false, ["fopen"] = false, ["fprintf"] = false, ["fputc"] = false, ["fputs"] = false, ["fputwc"] = false, ["fputws"] = false, ["fread"] = false, ["free"] = false, ["freopen"] = false, ["frexp"] = false, ["fscanf"] = false, ["fseek"] = false, ["fsetpos"] = false, ["ftell"] = false, ["fwprintf"] = false, ["fwrite"] = false, ["fwscanf"] = false, ["getc"] = false, ["getchar"] = false, ["getenv"] = false, ["gets"] = false, ["gmtime"] = false, ["isalnum"] = false, ["isalpha"] = false, ["isblank"] = false, ["iscntrl"] = false, ["isdigit"] = false, ["isgraph"] = false, ["islower"] = false, ["isprint"] = false, ["ispunct"] = false, ["isspace"] = false, ["isupper"] = false, ["isxdigit"] = false, ["itoa"] = false, ["labs"] = false, ["ldexp"] = false, ["ldiv"] = false, ["llabs"] = false, ["lldiv"] = false, ["localtime"] = false, ["log"] = false, ["log10"] = false, ["longjmp"] = false, ["malloc"] = false, ["mblen"] = false, ["mbstowcs"] = false, ["mbtowc"] = false, ["memchr"] = false, ["memcmp"] = false, ["memcpy"] = false, ["memmove"] = false, ["memset"] = false, ["mktime"] = false, ["modf"] = false, ["perror"] = false, ["pow"] = false, ["printf"] = false, ["putc"] = false, ["putchar"] = false, ["puts"] = false, ["putwc"] = false, ["qsort"] = false...}, _ignorefunction = std::__debug::set with 0 elements, _reporterrors = std::__debug::map with 0 elements, _processAfterCode = std::__debug::map with 0 elements, _markupExtensions = std::__debug::set with 0 elements, _keywords = std::__debug::map with 0 elements, _executableblocks = std::__debug::map with 0 elements, _exporters = std::__debug::map with 0 elements, _importers = std::__debug::map with 0 elements, _reflection = std::__debug::map with 0 elements, _formatstr = std::__debug::map with 21 elements = {["fnprintf"] = {first = false, second = false}, ["fprintf"] = {first = false, second = false}, ["fscanf"] = {first = true, second = false}, ["fwprintf"] = {first = false, second = false}, ["fwscanf"] = {first = true, second = false}, ["printf"] = {first = false, second = false}, ["scanf"] = {first = true, second = false}, ["snprintf"] = {first = false, second = false}, ["sprintf"] = {first = false, second = false}, ["sscanf"] = {first = true, second = false}, ["swscanf"] = {first = true, second = false}, ["vfprintf"] = {first = false, second = false}, ["vfscanf"] = {first = true, second = false}, ["vfwprintf"] = {first = false, second = false}, ["vprintf"] = {first = false, second = false}, ["vscanf"] = {first = true, second = false}, ["vsnprintf"] = {first = false, second = false}, ["vsprintf"] = {first = false, second = false}, ["vwprintf"] = {first = false, second = false}, ["wprintf"] = {first = false, second = false}, ["wscanf"] = {first = true, second = false}}, podtypes = std::__debug::map with 20 elements = {["double_t"] = {size = 0, sign = 0 '\000'}, ["float_t"] = {size = 0, sign = 0 '\000'}, ["int16_t"] = {size = 0, sign = 115 's'}, ["int32_t"] = {size = 0, sign = 115 's'}, ["int64_t"] = {size = 0, sign = 115 's'}, ["int8_t"] = {size = 0, sign = 115 's'}, ["int_fast16_t"] = {size = 0, sign = 115 's'}, ["int_fast32_t"] = {size = 0, sign = 115 's'}, ["int_fast64_t"] = {size = 0, sign = 115 's'}, ["int_fast8_t"] = {size = 0, sign = 115 's'}, ["intptr_t"] = {size = 0, sign = 115 's'}, ["uint16_t"] = {size = 0, sign = 117 'u'}, ["uint32_t"] = {size = 0, sign = 117 'u'}, ["uint64_t"] = {size = 0, sign = 117 'u'}, ["uint8_t"] = {size = 0, sign = 117 'u'}, ["uint_fast16_t"] = {size = 0, sign = 117 'u'}, ["uint_fast32_t"] = {size = 0, sign = 117 'u'}, ["uint_fast64_t"] = {size = 0, sign = 117 'u'}, ["uint_fast8_t"] = {size = 0, sign = 117 'u'}, ["uintptr_t"] = {size = 0, sign = 117 'u'}}, platform_types = std::__debug::map with 0 elements, platforms = std::__debug::map with 0 elements}, rules = empty std::__debug::list, checkConfiguration = false, checkLibrary = false, standards = {c = Standards::C11, cpp = Standards::CPP11, posix = false}, sizeof_bool = 1, sizeof_short = 2, sizeof_int = 4, sizeof_long = 4, sizeof_long_long = 8, sizeof_float = 4, sizeof_double = 8, sizeof_long_double = 12, sizeof_wchar_t = 4, sizeof_size_t = 4, sizeof_pointer = 4, platformType = Settings::Unspecified}
#13 0x082b73a7 in main (argc=2, argv=0xbffff0b4) at cli/main.cpp:129
        exec = {<ErrorLogger> = {_vptr.ErrorLogger = 0x84b8888 <vtable for CppCheckExecutor+8>}, _settings = 0xbfffea2c, _errorList = std::__debug::set with 0 elements, _files = std::__debug::map with 1 elements = {["crash228.cpp"] = 238}, time1 = 0, static exceptionOutput = "", errorlist = false}


registers:
eax            0x0	0
ecx            0x126f	4719
edx            0x6	6
ebx            0x126f	4719
esp            0xbfffd9a4	0xbfffd9a4
ebp            0xbfffdba8	0xbfffdba8
esi            0xbfffdbc4	-1073751100
edi            0xb7de8000	-1210155008
eip            0xb7fdbc7c	0xb7fdbc7c <__kernel_vsyscall+16>
eflags         0x206	[ PF IF ]
cs             0x73	115
ss             0x7b	123
ds             0x7b	123
es             0x7b	123
fs             0x0	0
gs             0x33	51


current instructions:
=> 0xb7fdbc7c <__kernel_vsyscall+16>:	pop    %ebp
   0xb7fdbc7d <__kernel_vsyscall+17>:	pop    %edx
   0xb7fdbc7e <__kernel_vsyscall+18>:	pop    %ecx
   0xb7fdbc7f <__kernel_vsyscall+19>:	ret    
   0xb7fdbc80:	loopne 0xb7fdbc7c <__kernel_vsyscall+16>
   0xb7fdbc82:	(bad)  
   0xb7fdbc83:	call   *(%eax,%eax,1)
   0xb7fdbc86:	add    %al,(%eax)
   0xb7fdbc88:	jno    0xb7fdbc8a
   0xb7fdbc8a:	add    (%ebx),%eax
   0xb7fdbc8c:	xlat   %ds:(%ebx)
   0xb7fdbc8d:	cli    
   0xb7fdbc8e:	(bad)  
   0xb7fdbc8f:	decl   (%ebx)
   0xb7fdbc91:	add    %al,(%eax)
   0xb7fdbc93:	add    %dh,0x0(%edx)


threads backtrace:

Thread 1 (Thread 0xb7c1f700 (LWP 4719)):
#0  0xb7fdbc7c in __kernel_vsyscall ()
#1  0xb7c6c577 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56
#2  0xb7c6dcf3 in __GI_abort () at abort.c:89
#3  0xb7ef510d in __gnu_debug::_Error_formatter::_M_error() const () from /usr/lib/i386-linux-gnu/libstdc++.so.6
#4  0x08485436 in std::stack<std::__debug::map<std::string, unsigned int, std::less<std::string>, std::allocator<std::pair<std::string const, unsigned int> > >, std::__debug::deque<std::__debug::map<std::string, unsigned int, std::less<std::string>, std::allocator<std::pair<std::string const, unsigned int> > >, std::allocator<std::__debug::map<std::string, unsigned int, std::less<std::string>, std::allocator<std::pair<std::string const, unsigned int> > > > > >::top (this=0xbfffdf38) at /usr/include/c++/4.9/bits/stl_stack.h:164
#5  0x0845a79c in Tokenizer::setVarId (this=0xbfffe238) at lib/tokenize.cpp:2580
#6  0x084604c0 in Tokenizer::simplifyTokenList1 (this=0xbfffe238, FileName=0x85b5f64 "crash228.cpp") at lib/tokenize.cpp:3599
#7  0x08455757 in Tokenizer::tokenize (this=0xbfffe238, code=..., FileName=0x85b5f64 "crash228.cpp", configuration="", noSymbolDB_AST=false) at lib/tokenize.cpp:1626
#8  0x083a8aa4 in CppCheck::checkFile (this=0xbfffea14, code="template <typename T, class D = Disposer<T>>\nclass UsefulShim : public Useful\n{\noperator const_ptr_type() {\nreturn const_ptr_type(const_cast<const T*>(static_cast<T*>(this)));\n}\n};\n\nclass Foo : public"..., FileName=0x85b5f64 "crash228.cpp", checksums=std::__debug::set with 0 elements) at lib/cppcheck.cpp:327
#9  0x083a7880 in CppCheck::processFile (this=0xbfffea14, filename="crash228.cpp", fileStream=...) at lib/cppcheck.cpp:237
#10 0x083a6474 in CppCheck::check (this=0xbfffea14, path="crash228.cpp") at lib/cppcheck.cpp:70
#11 0x082aef1e in CppCheckExecutor::check_internal (this=0xbfffefa8, cppcheck=..., argv=0xbffff0b4) at cli/cppcheckexecutor.cpp:774
#12 0x082ae00b in CppCheckExecutor::check (this=0xbfffefa8, argc=2, argv=0xbffff0b4) at cli/cppcheckexecutor.cpp:200
#13 0x082b73a7 in main (argc=2, argv=0xbffff0b4) at cli/main.cpp:129
*/
